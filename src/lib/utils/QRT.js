/* Generated by the Nim Compiler v1.6.6 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI33555114 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555125 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI805306387 = {size: 0, kind: 16, base: null, node: null, finalizer: null};
var NTI788529156 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI788529155 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI922747006 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI922746986 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI905969817 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI905969779 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI905969785 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643082 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI872415319 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI822083587 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI754974723 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI771751940 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI33554463 = {size: 0,kind: 42,base: null,node: null,finalizer: null};
var NTI771751939 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI654311478 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI33555121 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI939524111 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI939524110 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI939524109 = {size: 0, kind: 19, base: null, node: null, finalizer: null};
var NTI33555124 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI956301512 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI805307310 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI704643109 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33555128 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555130 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555083 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555165 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33554439 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI33555164 = {size: 0, kind: 22, base: null, node: null, finalizer: null};
var NTI33555112 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555113 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555120 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI33555122 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI687865859 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
var NTI822083589 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI687865860 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI704643076 = {size: 0, kind: 24, base: null, node: null, finalizer: null};
var NTI704643075 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI33554462 = {size: 0,kind: 41,base: null,node: null,finalizer: null};
var NTI822083591 = {size: 0, kind: 20, base: null, node: null, finalizer: null};
NTI822083591.base = NTI33554462;
NTI704643076.base = NTI33554462;
var NNI704643075 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "matrix", len: 0, typ: NTI704643076, name: "matrix", sons: null}, 
{kind: 1, offset: "size", len: 0, typ: NTI33554462, name: "size", sons: null}]};
NTI704643075.node = NNI704643075;
var NNI822083589 = {kind: 2, offset: 0, typ: null, name: null, len: 4, sons: {"0": {kind: 1, offset: 0, typ: NTI822083589, name: "qrECL", len: 0, sons: null}, 
"1": {kind: 1, offset: 1, typ: NTI822083589, name: "qrECM", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI822083589, name: "qrECQ", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI822083589, name: "qrECH", len: 0, sons: null}}};
NTI822083589.node = NNI822083589;
NTI687865859.base = NTI33554462;
var NNI687865860 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "version", len: 0, typ: NTI822083591, name: "version", sons: null}, 
{kind: 1, offset: "ecLevel", len: 0, typ: NTI822083589, name: "ecLevel", sons: null}, 
{kind: 1, offset: "mask", len: 0, typ: NTI687865859, name: "mask", sons: null}, 
{kind: 1, offset: "drawing", len: 0, typ: NTI704643075, name: "drawing", sons: null}]};
NTI687865860.node = NNI687865860;
var NNI33555122 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555122.node = NNI33555122;
var NNI33555120 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555120.node = NNI33555120;
var NNI33555113 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555113.node = NNI33555113;
NTI33555164.base = NTI33555112;
NTI33555165.base = NTI33555112;
var NNI33555112 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI33555164, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI33554440, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI33554439, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI33554439, name: "trace", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI33555165, name: "up", sons: null}]};
NTI33555112.node = NNI33555112;
var NNI33555083 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555083.node = NNI33555083;
NTI33555112.base = NTI33555083;
NTI33555113.base = NTI33555112;
NTI33555120.base = NTI33555113;
NTI33555122.base = NTI33555120;
var NNI33555130 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555130.node = NNI33555130;
NTI33555130.base = NTI33555113;
var NNI33555128 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555128.node = NNI33555128;
NTI33555128.base = NTI33555113;
var NNI704643109 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554462, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554462, name: "b", sons: null}]};
NTI704643109.node = NNI704643109;
NTI805307310.base = NTI33554462;
var NNI956301512 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554456, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI956301512.node = NNI956301512;
var NNI33555124 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555124.node = NNI33555124;
NTI33555124.base = NTI33555113;
NTI939524109.base = NTI33554462;
NTI939524110.base = NTI33554462;
NTI939524111.base = NTI33554462;
var NNI33555121 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555121.node = NNI33555121;
NTI33555121.base = NTI33555120;
NTI654311478.base = NTI33554462;
NTI771751940.base = NTI33554462;
var NNI771751939 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "pos", len: 0, typ: NTI33554463, name: "pos", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI771751940, name: "data", sons: null}]};
NTI771751939.node = NNI771751939;
var NNI822083587 = {kind: 2, offset: 0, typ: null, name: null, len: 3, sons: {"1": {kind: 1, offset: 1, typ: NTI822083587, name: "qrNumericMode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI822083587, name: "qrAlphanumericMode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI822083587, name: "qrByteMode", len: 0, sons: null}}};
NTI822083587.node = NNI822083587;
var NNI754974723 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mode", len: 0, typ: NTI822083587, name: "mode", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI822083591, name: "version", sons: null}, 
{kind: 1, offset: "ecLevel", len: 0, typ: NTI822083589, name: "ecLevel", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI771751939, name: "data", sons: null}]};
NTI754974723.node = NNI754974723;
NTI872415319.base = NTI33554463;
NTI704643082.base = NTI33554462;
var NNI905969785 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI905969779, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554463, name: "b", sons: null}]};
NTI905969785.node = NNI905969785;
NTI905969817.base = NTI33554462;
var NNI922746986 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "a", len: 0, typ: NTI33554463, name: "a", sons: null}, 
{kind: 1, offset: "b", len: 0, typ: NTI33554456, name: "b", sons: null}]};
NTI922746986.node = NNI922746986;
NTI922747006.base = NTI33554462;
var NNI788529155 = {kind: 2, len: 4, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "mode", len: 0, typ: NTI822083587, name: "mode", sons: null}, 
{kind: 1, offset: "version", len: 0, typ: NTI822083591, name: "version", sons: null}, 
{kind: 1, offset: "ecLevel", len: 0, typ: NTI822083589, name: "ecLevel", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI33554439, name: "data", sons: null}]};
NTI788529155.node = NNI788529155;
var NNI788529156 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI788529156.node = NNI788529156;
NTI788529156.base = NTI33555113;
NTI805306387.base = NTI33554463;
var NNI33555125 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555125.node = NNI33555125;
var NNI33555114 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI33555114.node = NNI33555114;
NTI33555114.base = NTI33555112;
NTI33555125.base = NTI33555114;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}

function makeNimstrLit(c_33556801) {
      var result = [];
  for (var i = 0; i < c_33556801.length; ++i) {
    result[i] = c_33556801.charCodeAt(i);
  }
  return result;
  

  
}

function mnewString(len_33556893) {
        return new Array(len_33556893);
  

  
}

function toJSStr(s_33556807) {
                    var Temporary5;
            var Temporary7;

  var result_33556808 = null;

    var res_33556842 = newSeq_33556825((s_33556807).length);
    var i_33556843 = 0;
    var j_33556844 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_33556843 < (s_33556807).length)) break Label2;
          var c_33556845 = s_33556807[i_33556843];
          if ((c_33556845 < 128)) {
          res_33556842[j_33556844] = String.fromCharCode(c_33556845);
          i_33556843 += 1;
          }
          else {
            var helper_33556857 = newSeq_33556825(0);
            Label3: do {
                Label4: while (true) {
                if (!true) break Label4;
                  var code_33556858 = c_33556845.toString(16);
                  if ((((code_33556858) == null ? 0 : (code_33556858).length) == 1)) {
                  helper_33556857.push("%0");;
                  }
                  else {
                  helper_33556857.push("%");;
                  }
                  
                  helper_33556857.push(code_33556858);;
                  i_33556843 += 1;
                    if (((s_33556807).length <= i_33556843)) Temporary5 = true; else {                      Temporary5 = (s_33556807[i_33556843] < 128);                    }                  if (Temporary5) {
                  break Label3;
                  }
                  
                  c_33556845 = s_33556807[i_33556843];
                }
            } while (false);
++excHandler;
            Temporary7 = framePtr;
            try {
            res_33556842[j_33556844] = decodeURIComponent(helper_33556857.join(""));
--excHandler;
} catch (EXCEPTION) {
 var prevJSError = lastJSError;
 lastJSError = EXCEPTION;
 --excHandler;
            framePtr = Temporary7;
            res_33556842[j_33556844] = helper_33556857.join("");
            lastJSError = prevJSError;
            } finally {
            framePtr = Temporary7;
            }
          }
          
          j_33556844 += 1;
        }
    } while (false);
    if (res_33556842.length < j_33556844) { for (var i = res_33556842.length ; i < j_33556844 ; ++i) res_33556842.push(null); }
               else { res_33556842.length = j_33556844; };
    result_33556808 = res_33556842.join("");

  return result_33556808;

}

function raiseException(e_33556667, ename_33556668) {
    e_33556667.name = ename_33556668;
    if ((excHandler == 0)) {
    unhandledException(e_33556667);
    }
    
    throw e_33556667;

  
}

function addInt(a_33556940, b_33556941) {
        var result = a_33556940 + b_33556941;
    checkOverflowInt(result);
    return result;
  

  
}

function chckRange(i_33557189, a_33557190, b_33557191) {
      var Temporary1;

  var result_33557192 = 0;

  BeforeRet: do {
      if (!(a_33557190 <= i_33557189)) Temporary1 = false; else {        Temporary1 = (i_33557189 <= b_33557191);      }    if (Temporary1) {
    result_33557192 = i_33557189;
    break BeforeRet;
    }
    else {
    raiseRangeError();
    }
    
  } while (false);

  return result_33557192;

}

function chckIndx(i_33557184, a_33557185, b_33557186) {
      var Temporary1;

  var result_33557187 = 0;

  BeforeRet: do {
      if (!(a_33557185 <= i_33557184)) Temporary1 = false; else {        Temporary1 = (i_33557184 <= b_33557186);      }    if (Temporary1) {
    result_33557187 = i_33557184;
    break BeforeRet;
    }
    else {
    raiseIndexError(i_33557184, a_33557185, b_33557186);
    }
    
  } while (false);

  return result_33557187;

}

function subInt(a_33556944, b_33556945) {
        var result = a_33556944 - b_33556945;
    checkOverflowInt(result);
    return result;
  

  
}

function SetPlus(a_33556915, b_33556916) {
        var result = {};
    for (var elem in a_33556915) { result[elem] = true; }
    for (var elem in b_33556916) { result[elem] = true; }
    return result;
  

  
}
var ConstSet2 = setConstr([4, 8]);
var ConstSet3 = setConstr(4);
var ConstSet4 = setConstr(8);

function mulInt(a_33556948, b_33556949) {
        var result = a_33556948 * b_33556949;
    checkOverflowInt(result);
    return result;
  

  
}

function divInt(a_33556952, b_33556953) {
        if (b_33556953 == 0) raiseDivByZero();
    if (b_33556953 == -1 && a_33556952 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556952 / b_33556953);
  

  
}

function modInt(a_33556956, b_33556957) {
        if (b_33556957 == 0) raiseDivByZero();
    if (b_33556957 == -1 && a_33556956 == 2147483647) raiseOverflow();
    return Math.trunc(a_33556956 % b_33556957);
  

  
}
var ConstSet5 = setConstr([4, 8]);
var ConstSet6 = setConstr(1488, 93);
var ConstSet7 = setConstr(1488, 93);
var ConstSet8 = setConstr(32, 36, 37, 42, 43, 45, 46, 47, 58);
var ConstSet9 = setConstr(32, [36, 37], [42, 43], [45, 58], [65, 90]);
var ConstSet10 = setConstr([48, 57]);
var ConstSet11 = setConstr(60, 62, 94);
var ConstSet12 = setConstr(60, 62, 94);
var ConstSet13 = setConstr(45, 43, 32);
var ConstSet14 = setConstr([48, 57]);
var ConstSet15 = setConstr([48, 57]);
var ConstSet16 = setConstr([48, 57]);
var ConstSet17 = setConstr([65, 90], [97, 122]);

function nimCharToStr(x_33556517) {
  var result_33556518 = [];

    result_33556518 = nimCopy(null, mnewString(1), NTI33554439);
    result_33556518[0] = x_33556517;

  return result_33556518;

}

function addChar(x_33557255, c_33557256) {
    x_33557255.push(c_33557256);

  
}

function cstrToNimstr(c_33556804) {
      var ln = c_33556804.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_33556804.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_33556804.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

  
}
var ConstSet18 = setConstr(46, 44);
var ConstSet19 = setConstr([65, 90]);
var ConstSet20 = setConstr([97, 122]);
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var numericModeCapacities_805306373 = [new Uint16Array([41, 77, 127, 187, 255, 322, 370, 461, 552, 652, 772, 883, 1022, 1101, 1250, 1408, 1548, 1725, 1903, 2061, 2232, 2409, 2620, 2812, 3057, 3283, 3517, 3669, 3909, 4158, 4417, 4686, 4965, 5253, 5529, 5836, 6153, 6479, 6743, 7089]), new Uint16Array([34, 63, 101, 149, 202, 255, 293, 365, 432, 513, 604, 691, 796, 871, 991, 1082, 1212, 1346, 1500, 1600, 1708, 1872, 2059, 2188, 2395, 2544, 2701, 2857, 3035, 3289, 3486, 3693, 3909, 4134, 4343, 4588, 4775, 5039, 5313, 5596]), new Uint16Array([27, 48, 77, 111, 144, 178, 207, 259, 312, 364, 427, 489, 580, 621, 703, 775, 876, 948, 1063, 1159, 1224, 1358, 1468, 1588, 1718, 1804, 1933, 2085, 2181, 2358, 2473, 2670, 2805, 2949, 3081, 3244, 3417, 3599, 3791, 3993]), new Uint16Array([17, 34, 58, 82, 106, 139, 154, 202, 235, 288, 331, 374, 427, 468, 530, 602, 674, 746, 813, 919, 969, 1056, 1108, 1228, 1286, 1425, 1501, 1581, 1677, 1782, 1897, 2022, 2157, 2301, 2361, 2524, 2625, 2735, 2927, 3057])];
var alphanumericModeCapacities_805306375 = [new Uint16Array([25, 47, 77, 114, 154, 195, 224, 279, 335, 395, 468, 535, 619, 667, 758, 854, 938, 1046, 1153, 1249, 1352, 1460, 1588, 1704, 1853, 1990, 2132, 2223, 2369, 2520, 2677, 2840, 3009, 3183, 3351, 3537, 3729, 3927, 4087, 4296]), new Uint16Array([20, 38, 61, 90, 122, 154, 178, 221, 262, 311, 366, 419, 483, 528, 600, 656, 734, 816, 909, 970, 1035, 1134, 1248, 1326, 1451, 1542, 1637, 1732, 1839, 1994, 2113, 2238, 2369, 2506, 2632, 2780, 2894, 3054, 3220, 3391]), new Uint16Array([16, 29, 47, 67, 87, 108, 125, 157, 189, 221, 259, 296, 352, 376, 426, 470, 531, 574, 644, 702, 742, 823, 890, 963, 1041, 1094, 1172, 1263, 1322, 1429, 1499, 1618, 1700, 1787, 1867, 1966, 2071, 2181, 2298, 2420]), new Uint16Array([10, 20, 35, 50, 64, 84, 93, 122, 143, 174, 200, 227, 259, 283, 321, 365, 408, 452, 493, 557, 587, 640, 672, 744, 779, 864, 910, 958, 1016, 1080, 1150, 1226, 1307, 1394, 1431, 1530, 1591, 1658, 1774, 1852])];
var byteModeCapacities_805306377 = [new Uint16Array([17, 32, 53, 78, 106, 134, 154, 192, 230, 271, 321, 367, 425, 458, 520, 586, 644, 718, 792, 858, 929, 1003, 1091, 1171, 1273, 1367, 1465, 1528, 1628, 1732, 1840, 1952, 2068, 2188, 2303, 2431, 2563, 2699, 2809, 2953]), new Uint16Array([14, 26, 42, 62, 84, 106, 122, 152, 180, 213, 251, 287, 331, 362, 412, 450, 504, 560, 624, 666, 711, 779, 857, 911, 997, 1059, 1125, 1190, 1264, 1370, 1452, 1538, 1628, 1722, 1809, 1911, 1989, 2099, 2213, 2331]), new Uint16Array([11, 20, 32, 46, 60, 74, 86, 108, 130, 151, 177, 203, 241, 258, 292, 322, 364, 394, 442, 482, 509, 565, 611, 661, 715, 751, 805, 868, 908, 982, 1030, 1112, 1168, 1228, 1283, 1351, 1423, 1499, 1579, 1663]), new Uint16Array([7, 14, 24, 34, 44, 58, 64, 84, 98, 119, 137, 155, 177, 194, 220, 250, 280, 310, 338, 382, 403, 439, 461, 511, 535, 593, 625, 658, 698, 742, 790, 842, 898, 958, 983, 1051, 1093, 1139, 1219, 1273])];
var totalDataCodewords_805306379 = [new Uint16Array([19, 34, 55, 80, 108, 136, 156, 194, 232, 274, 324, 370, 428, 461, 523, 589, 647, 721, 795, 861, 932, 1006, 1094, 1174, 1276, 1370, 1468, 1531, 1631, 1735, 1843, 1955, 2071, 2191, 2306, 2434, 2566, 2702, 2812, 2956]), new Uint16Array([16, 28, 44, 64, 86, 108, 124, 154, 182, 216, 254, 290, 334, 365, 415, 453, 507, 563, 627, 669, 714, 782, 860, 914, 1000, 1062, 1128, 1193, 1267, 1373, 1455, 1541, 1631, 1725, 1812, 1914, 1992, 2102, 2216, 2334]), new Uint16Array([13, 22, 34, 48, 62, 76, 88, 110, 132, 154, 180, 206, 244, 261, 295, 325, 367, 397, 445, 485, 512, 568, 614, 664, 718, 754, 808, 871, 911, 985, 1033, 1115, 1171, 1231, 1286, 1354, 1426, 1502, 1582, 1666]), new Uint16Array([9, 16, 26, 36, 46, 60, 66, 86, 100, 122, 140, 158, 180, 197, 223, 253, 283, 313, 341, 385, 406, 442, 464, 514, 538, 596, 628, 661, 701, 745, 793, 845, 901, 961, 986, 1054, 1096, 1142, 1222, 1276])];
var group1Blocks_805306381 = [new Uint8Array([1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 4, 2, 4, 3, 5, 5, 1, 5, 3, 3, 4, 2, 4, 6, 8, 10, 8, 3, 7, 5, 13, 17, 17, 13, 12, 6, 17, 4, 20, 19]), new Uint8Array([1, 1, 1, 2, 2, 4, 4, 2, 3, 4, 1, 6, 8, 4, 5, 7, 10, 9, 3, 3, 17, 17, 4, 6, 8, 19, 22, 3, 21, 19, 2, 10, 14, 14, 12, 6, 29, 13, 40, 18]), new Uint8Array([1, 1, 2, 2, 2, 4, 2, 4, 4, 6, 4, 4, 8, 11, 5, 15, 1, 17, 17, 15, 17, 7, 11, 11, 7, 28, 8, 4, 1, 15, 42, 10, 29, 44, 39, 46, 49, 48, 43, 34]), new Uint8Array([1, 1, 2, 4, 2, 4, 4, 4, 4, 6, 3, 7, 12, 11, 11, 3, 2, 2, 9, 15, 19, 34, 16, 30, 22, 33, 12, 11, 19, 23, 23, 19, 11, 59, 22, 2, 24, 42, 10, 20])];
var group1BlockDataCodewords_805306383 = [new Uint8Array([19, 34, 55, 80, 108, 68, 78, 97, 116, 68, 81, 92, 107, 115, 87, 98, 107, 120, 113, 107, 116, 111, 121, 117, 106, 114, 122, 117, 116, 115, 115, 115, 115, 115, 121, 121, 122, 122, 117, 118]), new Uint8Array([16, 28, 44, 32, 43, 27, 31, 38, 36, 43, 50, 36, 37, 40, 41, 45, 46, 43, 44, 41, 42, 46, 47, 45, 47, 46, 45, 45, 45, 47, 46, 46, 46, 46, 47, 47, 46, 46, 47, 47]), new Uint8Array([13, 22, 17, 24, 15, 19, 14, 18, 16, 19, 22, 20, 20, 16, 24, 19, 22, 22, 21, 24, 22, 24, 24, 24, 24, 22, 23, 24, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24]), new Uint8Array([9, 16, 13, 9, 11, 15, 13, 14, 12, 15, 12, 14, 11, 12, 12, 15, 14, 14, 13, 15, 16, 13, 15, 16, 15, 16, 15, 15, 15, 15, 15, 15, 15, 16, 15, 15, 15, 15, 15, 15])];
var group2Blocks_805306385 = [new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 0, 2, 0, 1, 1, 1, 5, 1, 4, 5, 4, 7, 5, 4, 4, 2, 4, 10, 7, 10, 3, 0, 1, 6, 7, 14, 4, 18, 4, 6]), new Uint8Array([0, 0, 0, 0, 0, 0, 0, 2, 2, 1, 4, 2, 1, 5, 5, 3, 1, 4, 11, 13, 0, 0, 14, 14, 13, 4, 3, 23, 7, 10, 29, 23, 21, 23, 26, 34, 14, 32, 7, 31]), new Uint8Array([0, 0, 0, 0, 2, 0, 4, 2, 4, 2, 4, 6, 4, 5, 7, 2, 15, 1, 4, 5, 6, 16, 14, 16, 22, 6, 26, 31, 37, 25, 1, 35, 19, 7, 14, 10, 10, 14, 22, 34]), new Uint8Array([0, 0, 0, 0, 2, 0, 1, 2, 4, 2, 8, 4, 4, 5, 7, 13, 17, 19, 16, 10, 6, 0, 14, 2, 13, 4, 28, 31, 26, 25, 28, 35, 46, 1, 41, 64, 46, 32, 67, 61])];
var group2BlockDataCodewords_805306387 = [new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 69, 0, 93, 0, 116, 88, 99, 108, 121, 114, 108, 117, 112, 122, 118, 107, 115, 123, 118, 117, 116, 116, 0, 116, 116, 122, 122, 123, 123, 118, 119]), new Uint8Array([0, 0, 0, 0, 0, 0, 0, 39, 37, 44, 51, 37, 38, 41, 42, 46, 47, 44, 45, 42, 0, 0, 48, 46, 48, 47, 46, 46, 46, 48, 47, 47, 47, 47, 48, 48, 47, 47, 48, 48]), new Uint8Array([0, 0, 0, 0, 16, 0, 15, 19, 17, 20, 23, 21, 21, 17, 25, 20, 23, 23, 22, 25, 23, 25, 25, 25, 25, 23, 24, 25, 24, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25, 25]), new Uint8Array([0, 0, 0, 0, 12, 0, 14, 15, 13, 16, 13, 15, 12, 13, 13, 16, 15, 15, 14, 16, 17, 0, 16, 17, 16, 17, 16, 16, 16, 16, 16, 16, 16, 17, 16, 16, 16, 16, 16, 16])];
var blockECCodewords_805306389 = [new Uint8Array([7, 10, 15, 20, 26, 18, 20, 24, 30, 18, 20, 24, 26, 30, 22, 24, 28, 30, 28, 28, 28, 28, 30, 30, 26, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]), new Uint8Array([10, 16, 26, 18, 24, 16, 18, 22, 22, 26, 30, 22, 22, 24, 24, 28, 28, 26, 26, 26, 26, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28, 28]), new Uint8Array([13, 22, 18, 26, 18, 24, 18, 22, 20, 24, 28, 26, 24, 20, 30, 24, 28, 28, 26, 30, 28, 30, 30, 30, 30, 28, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30]), new Uint8Array([17, 28, 22, 16, 22, 28, 26, 26, 24, 28, 24, 28, 22, 24, 24, 30, 28, 28, 26, 28, 30, 24, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30, 30])];
var alignmentPatternLocations_805306550 = [[], [18], [22], [26], [30], [34], [22, 38], [24, 42], [26, 46], [28, 50], [30, 54], [32, 58], [34, 62], [26, 46, 66], [26, 48, 70], [26, 50, 74], [30, 54, 78], [30, 56, 82], [30, 58, 86], [34, 62, 90], [28, 50, 72, 94], [26, 50, 74, 98], [30, 54, 78, 102], [28, 54, 80, 106], [32, 58, 84, 110], [30, 58, 86, 114], [34, 62, 90, 118], [26, 50, 74, 98, 122], [30, 54, 78, 102, 126], [26, 52, 78, 104, 130], [30, 56, 82, 108, 134], [34, 60, 86, 112, 138], [30, 58, 86, 114, 142], [34, 62, 90, 118, 146], [30, 54, 78, 102, 126, 150], [24, 50, 76, 102, 128, 154], [28, 54, 80, 106, 132, 158], [32, 58, 84, 110, 136, 162], [26, 54, 82, 110, 138, 166], [30, 58, 86, 114, 142, 170]];

function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function newDrawing_704643076(size_704643077) {
  var result_704643078 = ({matrix: [], size: 0});

    var matrixSize_704643079 = (((((((size_704643077 & 0xffff) * (size_704643077 & 0xffff)) & 0xffff) / 8) & 0xffff) + 1) & 0xffff);
    result_704643078 = nimCopy(result_704643078, {matrix: [], size: size_704643077}, NTI704643075);
    if (result_704643078.matrix.length < ((matrixSize_704643079) | 0)) { for (var i = result_704643078.matrix.length ; i < ((matrixSize_704643079) | 0) ; ++i) result_704643078.matrix.push(0); }
               else { result_704643078.matrix.length = ((matrixSize_704643079) | 0); };

  return result_704643078;

}

function newDrawedQRCode_687865879(qr_687865880) {
  var result_687865881 = ({version: 0, ecLevel: 0, mask: 0, drawing: ({matrix: [], size: 0})});

    result_687865881 = nimCopy(result_687865881, {version: nimCopy(null, qr_687865880.version, NTI822083591), ecLevel: qr_687865880.ecLevel, drawing: newDrawing_704643076(((((((qr_687865880.version - 1) & 0xff) * 4) & 0xff) + 21) & 0xff)), mask: 0}, NTI687865860);

  return result_687865881;

}

function add_33556419(x_33556420, x_33556420_Idx, y_33556421) {
          if (x_33556420[x_33556420_Idx] === null) { x_33556420[x_33556420_Idx] = []; }
      var off = x_33556420[x_33556420_Idx].length;
      x_33556420[x_33556420_Idx].length += y_33556421.length;
      for (var i = 0; i < y_33556421.length; ++i) {
        x_33556420[x_33556420_Idx][off+i] = y_33556421.charCodeAt(i);
      }
    

  
}

function newSeq_33556825(len_33556827) {
  var result_33556828 = [];

    result_33556828 = new Array(len_33556827); for (var i = 0 ; i < len_33556827 ; ++i) { result_33556828[i] = null; }
  return result_33556828;

}

function unhandledException(e_33556663) {
    var buf_33556664 = [[]];
    if (!(((e_33556663.message).length == 0))) {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception: "));;
    buf_33556664[0].push.apply(buf_33556664[0], e_33556663.message);;
    }
    else {
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("Error: unhandled exception"));;
    }
    
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit(" ["));;
    add_33556419(buf_33556664, 0, e_33556663.name);
    buf_33556664[0].push.apply(buf_33556664[0], makeNimstrLit("]\x0A"));;
    var cbuf_33556665 = toJSStr(buf_33556664[0]);
    framePtr = null;
      if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_33556665);
  }
  else {
    throw cbuf_33556665;
  }
  

  
}

function raiseOverflow() {
    raiseException({message: makeNimstrLit("over- or underflow"), parent: null, m_type: NTI33555122, name: null, trace: [], up: null}, "OverflowDefect");

  
}

function checkOverflowInt(a_33556938) {
        if (a_33556938 > 2147483647 || a_33556938 < -2147483648) raiseOverflow();
  

  
}

function raiseRangeError() {
    raiseException({message: makeNimstrLit("value out of range"), parent: null, m_type: NTI33555130, name: null, trace: [], up: null}, "RangeDefect");

  
}

function addChars_251658415(result_251658417, result_251658417_Idx, x_251658418, start_251658419, n_251658420) {
    var old_251658421 = (result_251658417[result_251658417_Idx]).length;
    (result_251658417[result_251658417_Idx].length = chckRange(addInt(old_251658421, n_251658420), 0, 2147483647));
    Label1: do {
      var iHEX60gensym4_251658435 = 0;
      var i_486539294 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539294 < n_251658420)) break Label3;
            iHEX60gensym4_251658435 = i_486539294;
            result_251658417[result_251658417_Idx][chckIndx(addInt(old_251658421, iHEX60gensym4_251658435), 0, (result_251658417[result_251658417_Idx]).length - 1)] = x_251658418.charCodeAt(chckIndx(addInt(start_251658419, iHEX60gensym4_251658435), 0, (x_251658418).length - 1));
            i_486539294 = addInt(i_486539294, 1);
          }
      } while (false);
    } while (false);

  
}

function addChars_251658411(result_251658413, result_251658413_Idx, x_251658414) {
    addChars_251658415(result_251658413, result_251658413_Idx, x_251658414, 0, ((x_251658414) == null ? 0 : (x_251658414).length));

  
}

function addInt_251658436(result_251658437, result_251658437_Idx, x_251658438) {
    addChars_251658411(result_251658437, result_251658437_Idx, ((x_251658438) + ""));

  
}

function addInt_251658457(result_251658458, result_251658458_Idx, x_251658459) {
    addInt_251658436(result_251658458, result_251658458_Idx, x_251658459);

  
}

function HEX24_335544323(x_335544324) {
  var result_335544325 = [[]];

    addInt_251658457(result_335544325, 0, x_335544324);

  return result_335544325[0];

}

function raiseIndexError(i_33556754, a_33556755, b_33556756) {
    var Temporary1;

    if ((b_33556756 < a_33556755)) {
    Temporary1 = makeNimstrLit("index out of bounds, the container is empty");
    }
    else {
    Temporary1 = (makeNimstrLit("index ") || []).concat(HEX24_335544323(i_33556754) || [],makeNimstrLit(" not in ") || [],HEX24_335544323(a_33556755) || [],makeNimstrLit(" .. ") || [],HEX24_335544323(b_33556756) || []);
    }
    
    raiseException({message: nimCopy(null, Temporary1, NTI33554439), parent: null, m_type: NTI33555128, name: null, trace: [], up: null}, "IndexDefect");

  
}

function HEX5BHEX5DHEX3D_704643183(self_704643184, x_704643185, y_704643186, val_704643187) {
    var Temporary1;

    var bitPos_704643188 = (((((y_704643186 & 0xffff) * (self_704643184.size & 0xffff)) & 0xffff) + (x_704643185 & 0xffff)) & 0xffff);
    if (val_704643187) {
    Temporary1 = (self_704643184.matrix[chckIndx(((bitPos_704643188 / 8) & 0xffff), 0, (self_704643184.matrix).length - 1)] | (1 << ((7 - (bitPos_704643188 % 8)) & 0xffff)));
    }
    else {
    Temporary1 = (self_704643184.matrix[chckIndx(((bitPos_704643188 / 8) & 0xffff), 0, (self_704643184.matrix).length - 1)] & (255 ^ (1 << ((7 - (bitPos_704643188 % 8)) & 0xffff))));
    }
    
    self_704643184.matrix[chckIndx(((bitPos_704643188 / 8) & 0xffff), 0, (self_704643184.matrix).length - 1)] = Temporary1;

  
}

function fillRectangle_704643207(self_704643208, xRange_704643210, yRange_704643211) {
    Label1: do {
      var y_704643215 = 0;
      Label2: do {
        var x_486539287 = 0;
        var res_486539288 = ((yRange_704643211.a) | 0);
        Label3: do {
            Label4: while (true) {
            if (!(res_486539288 <= ((yRange_704643211.b) | 0))) break Label4;
              x_486539287 = res_486539288;
              y_704643215 = x_486539287;
              Label5: do {
                var x_704643219 = 0;
                Label6: do {
                  var x_486539283 = 0;
                  var res_486539284 = ((xRange_704643210.a) | 0);
                  Label7: do {
                      Label8: while (true) {
                      if (!(res_486539284 <= ((xRange_704643210.b) | 0))) break Label8;
                        x_486539283 = res_486539284;
                        x_704643219 = x_486539283;
                        HEX5BHEX5DHEX3D_704643183(self_704643208, x_704643219, y_704643215, true);
                        res_486539284 = addInt(res_486539284, 1);
                      }
                  } while (false);
                } while (false);
              } while (false);
              res_486539288 = addInt(res_486539288, 1);
            }
        } while (false);
      } while (false);
    } while (false);

  
}

function HEX2EHEX2E_671088738(a_671088741, b_671088742) {
  var result_671088743 = ({a: 0, b: 0});

    result_671088743 = nimCopy(result_671088743, {a: a_671088741, b: b_671088742}, NTI704643109);

  return result_671088743;

}

function drawFinderPatterns_956301317(self_956301318) {
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 6), HEX2EHEX2E_671088738(0, 0));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 6), HEX2EHEX2E_671088738(6, 6));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 0), HEX2EHEX2E_671088738(1, 5));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(6, 6), HEX2EHEX2E_671088738(1, 5));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(2, 4), HEX2EHEX2E_671088738(2, 4));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(((self_956301318.drawing.size - 7) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff)), HEX2EHEX2E_671088738(0, 0));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(((self_956301318.drawing.size - 7) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff)), HEX2EHEX2E_671088738(6, 6));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(((self_956301318.drawing.size - 7) & 0xff), ((self_956301318.drawing.size - 7) & 0xff)), HEX2EHEX2E_671088738(1, 5));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff)), HEX2EHEX2E_671088738(1, 5));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 2) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 4) & 0xff)), HEX2EHEX2E_671088738(2, 4));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 6), HEX2EHEX2E_671088738(((self_956301318.drawing.size - 7) & 0xff), ((self_956301318.drawing.size - 7) & 0xff)));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 6), HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 6) & 0xff)));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(0, 0), HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 1) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 5) & 0xff)));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(6, 6), HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 1) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 5) & 0xff)));
    fillRectangle_704643207(self_956301318.drawing, HEX2EHEX2E_671088738(2, 4), HEX2EHEX2E_671088738(((((self_956301318.drawing.size - 7) & 0xff) + 2) & 0xff), ((((self_956301318.drawing.size - 7) & 0xff) + 4) & 0xff)));

  
}

function HEX5BHEX5D_956301540(s_956301544, x_956301545) {
  var result_956301546 = [];

    var a_956301548 = x_956301545.a;
    var L_956301553 = addInt(subInt(subInt((s_956301544).length, x_956301545.b), a_956301548), 1);
    result_956301546 = new Array(chckRange(L_956301553, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_956301553, 0, 2147483647) ; ++i) { result_956301546[i] = 0; }    Label1: do {
      var i_956301562 = 0;
      var i_486539324 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539324 < L_956301553)) break Label3;
            i_956301562 = i_486539324;
            result_956301546[chckIndx(i_956301562, 0, (result_956301546).length - 1)] = s_956301544[chckIndx(addInt(i_956301562, a_956301548), 0, (s_956301544).length - 1)];
            i_486539324 = addInt(i_486539324, 1);
          }
      } while (false);
    } while (false);

  return result_956301546;

}

function HEX2EHEX2E_956301517(a_956301520, b_956301521) {
  var result_956301524 = ({a: 0, b: 0});

    result_956301524 = nimCopy(result_956301524, {a: a_956301520, b: b_956301521}, NTI956301512);

  return result_956301524;

}

function sysFatal_218103842(message_218103845) {
    raiseException({message: nimCopy(null, message_218103845, NTI33554439), m_type: NTI33555124, parent: null, name: null, trace: [], up: null}, "AssertionDefect");

  
}

function raiseAssert_218103840(msg_218103841) {
    sysFatal_218103842(msg_218103841);

  
}

function failedAssertImpl_218103864(msg_218103865) {
    raiseAssert_218103840(msg_218103865);

  
}

function drawAlignmentPatterns_956301580(self_956301581) {
  BeforeRet: do {
    if ((self_956301581.version == 1)) {
    break BeforeRet;
    }
    
    Label1: do {
      var x_956301582 = 0;
      var y_956301583 = 0;
      var locations_486539310 = nimCopy(null, alignmentPatternLocations_805306550[chckIndx(self_956301581.version, 1, (alignmentPatternLocations_805306550).length + (1) - 1) - (1)], NTI805307310);
      Label2: do {
        var i_486539312 = 0;
        var pos_486539313 = 0;
        var i_486539314 = 0;
        var L_486539315 = (locations_486539310).length;
        Label3: do {
            Label4: while (true) {
            if (!(i_486539314 < L_486539315)) break Label4;
              i_486539312 = i_486539314;
              pos_486539313 = locations_486539310[chckIndx(i_486539314, 0, (locations_486539310).length - 1)];
              if ((i_486539312 < subInt((locations_486539310).length, 1))) {
              x_956301582 = 6;
              y_956301583 = pos_486539313;
              HEX5BHEX5DHEX3D_704643183(self_956301581.drawing, x_956301582, y_956301583, true);
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 2) & 0xff), ((y_956301583 - 2) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 + 2) & 0xff), ((y_956301583 + 2) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 - 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 + 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
              x_956301582 = pos_486539313;
              y_956301583 = 6;
              HEX5BHEX5DHEX3D_704643183(self_956301581.drawing, x_956301582, y_956301583, true);
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 2) & 0xff), ((y_956301583 - 2) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 + 2) & 0xff), ((y_956301583 + 2) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 - 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
              fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 + 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
              }
              
              Label5: do {
                var pos2_486539318 = 0;
                var colontmp__486539319 = [];
                colontmp__486539319 = HEX5BHEX5D_956301540(locations_486539310, HEX2EHEX2E_956301517(i_486539312, 1));
                var i_486539320 = 0;
                var L_486539321 = (colontmp__486539319).length;
                Label6: do {
                    Label7: while (true) {
                    if (!(i_486539320 < L_486539321)) break Label7;
                      pos2_486539318 = colontmp__486539319[chckIndx(i_486539320, 0, (colontmp__486539319).length - 1)];
                      x_956301582 = pos_486539313;
                      y_956301583 = pos2_486539318;
                      HEX5BHEX5DHEX3D_704643183(self_956301581.drawing, x_956301582, y_956301583, true);
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 2) & 0xff), ((y_956301583 - 2) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 + 2) & 0xff), ((y_956301583 + 2) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 - 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 + 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
                      if (!((pos_486539313 == pos2_486539318))) {
                      x_956301582 = pos2_486539318;
                      y_956301583 = pos_486539313;
                      HEX5BHEX5DHEX3D_704643183(self_956301581.drawing, x_956301582, y_956301583, true);
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 2) & 0xff), ((y_956301583 - 2) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 + 2) & 0xff), ((y_956301583 + 2) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 - 2) & 0xff), ((x_956301582 - 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
                      fillRectangle_704643207(self_956301581.drawing, HEX2EHEX2E_671088738(((x_956301582 + 2) & 0xff), ((x_956301582 + 2) & 0xff)), HEX2EHEX2E_671088738(((y_956301583 - 1) & 0xff), ((y_956301583 + 1) & 0xff)));
                      }
                      
                      i_486539320 = addInt(i_486539320, 1);
                      if (!(((colontmp__486539319).length == L_486539321))) {
                      failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                      }
                      
                    }
                } while (false);
              } while (false);
              i_486539314 = addInt(i_486539314, 1);
              if (!(((locations_486539310).length == L_486539315))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(173, 11) `len(a) == L` the length of the seq changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
    } while (false);
  } while (false);

  
}

function drawTimingPatterns_956301624(self_956301625) {
    Label1: do {
      var pos_956301636 = 0;
      var colontmp__486539327 = 0;
      colontmp__486539327 = ((self_956301625.drawing.size - 8) & 0xff);
      var x_486539329 = 8;
      Label2: do {
          Label3: while (true) {
          if (!(x_486539329 <= colontmp__486539327)) break Label3;
            pos_956301636 = x_486539329;
            HEX5BHEX5DHEX3D_704643183(self_956301625.drawing, pos_956301636, 6, true);
            HEX5BHEX5DHEX3D_704643183(self_956301625.drawing, 6, pos_956301636, true);
            x_486539329 = ((x_486539329 + 2) & 0xff);
          }
      } while (false);
    } while (false);

  
}

function drawDarkModule_956301637(self_956301638) {
    HEX5BHEX5DHEX3D_704643183(self_956301638.drawing, 8, ((self_956301638.drawing.size - 8) & 0xff), true);

  
}

function raiseDivByZero() {
    raiseException({message: makeNimstrLit("division by zero"), parent: null, m_type: NTI33555121, name: null, trace: [], up: null}, "DivByZeroDefect");

  
}

function contains_654311537(s_654311541, value_654311542) {
  var result_654311543 = false;

    result_654311543 = ((s_654311541.a <= value_654311542) && (value_654311542 <= s_654311541.b));

  return result_654311543;

}

function drawData_939524122(self_939524123, data_939524124) {
                var Temporary7;
                var Temporary8;
                var Temporary9;
                var Temporary10;
                var Temporary11;
                var Temporary12;
                var Temporary13;
                  var Temporary14;
                  var Temporary15;
                  var Temporary16;
                var Temporary17;
                var Temporary18;
                var Temporary19;
                var Temporary20;

    var pos_939524126 = {x: ((self_939524123.drawing.size - 1) & 0xff), y: ((self_939524123.drawing.size - 1) & 0xff), direction: 0, orientation: 0, repeat: 0};
    var alignmentPatternBoundsX_939524127 = {};
    var alignmentPatternUpperBoundsY_939524128 = {};
    var alignmentPatternLowerBoundsY_939524129 = {};
    if ((1 < (alignmentPatternLocations_805306550[chckIndx(self_939524123.version, 1, (alignmentPatternLocations_805306550).length + (1) - 1) - (1)]).length)) {
    alignmentPatternBoundsX_939524127 = nimCopy(alignmentPatternBoundsX_939524127, SetPlus(alignmentPatternBoundsX_939524127, ConstSet2), NTI939524109);
    alignmentPatternUpperBoundsY_939524128 = nimCopy(alignmentPatternUpperBoundsY_939524128, SetPlus(alignmentPatternUpperBoundsY_939524128, ConstSet3), NTI939524110);
    alignmentPatternLowerBoundsY_939524129 = nimCopy(alignmentPatternLowerBoundsY_939524129, SetPlus(alignmentPatternLowerBoundsY_939524129, ConstSet4), NTI939524111);
    }
    
    Label1: do {
      var pos_939524151 = 0;
      var colontmp__486539332 = [];
      colontmp__486539332 = alignmentPatternLocations_805306550[chckIndx(self_939524123.version, 1, (alignmentPatternLocations_805306550).length + (1) - 1) - (1)];
      var i_486539333 = 0;
      var L_486539334 = (colontmp__486539332).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539333 < L_486539334)) break Label3;
            pos_939524151 = colontmp__486539332[chckIndx(i_486539333, 0, (colontmp__486539332).length - 1)];
            alignmentPatternBoundsX_939524127 = nimCopy(alignmentPatternBoundsX_939524127, SetPlus(alignmentPatternBoundsX_939524127, setConstr([((pos_939524151 - 2) & 0xff), ((pos_939524151 + 2) & 0xff)])), NTI939524109);
            alignmentPatternUpperBoundsY_939524128 = nimCopy(alignmentPatternUpperBoundsY_939524128, SetPlus(alignmentPatternUpperBoundsY_939524128, setConstr(((pos_939524151 - 2) & 0xff))), NTI939524110);
            alignmentPatternLowerBoundsY_939524129 = nimCopy(alignmentPatternLowerBoundsY_939524129, SetPlus(alignmentPatternLowerBoundsY_939524129, setConstr(((pos_939524151 + 2) & 0xff))), NTI939524111);
            i_486539333 = addInt(i_486539333, 1);
            if (!(((colontmp__486539332).length == L_486539334))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
    Label4: do {
      var module_939524178 = 0;
      var colontmp__486539337 = 0;
      colontmp__486539337 = mulInt((data_939524124.data).length, 8);
      var i_486539338 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(i_486539338 < colontmp__486539337)) break Label6;
            module_939524178 = i_486539338;
            if ((((data_939524124.data[chckIndx(divInt(module_939524178, 8), 0, (data_939524124.data).length - 1)] >>> subInt(7, modInt(module_939524178, 8))) & 1) == 1)) {
            HEX5BHEX5DHEX3D_704643183(self_939524123.drawing, pos_939524126.x, pos_939524126.y, true);
            }
            
            switch (pos_939524126.direction) {
            case 1:
              if ((pos_939524126.y == 0)) {
              pos_939524126.direction = 0;
              pos_939524126.repeat = 1;
              pos_939524126.orientation = 1;
              }
              else {
              if ((pos_939524126.y == 7)) {
                if (!(7 <= self_939524123.version)) Temporary7 = false; else {                  Temporary7 = (pos_939524126.x == ((self_939524123.drawing.size - 10) & 0xff));                }              if (Temporary7) {
              pos_939524126.x = ((pos_939524126.x - 2) & 0xff);
              pos_939524126.y = 255;
              pos_939524126.direction = 4;
              pos_939524126.orientation = 1;
              pos_939524126.repeat = 5;
              }
              else {
              pos_939524126.y = ((pos_939524126.y - 1) & 0xff);
              }
              
              }
              else {
                if (!(pos_939524126.y == 9)) Temporary8 = false; else {                  Temporary8 = (setConstr([0, 8], [((self_939524123.drawing.size - 8) & 0xff), ((self_939524123.drawing.size - 1) & 0xff)])[pos_939524126.x] != undefined);                }              if (Temporary8) {
              pos_939524126.direction = 0;
              pos_939524126.repeat = 1;
              pos_939524126.orientation = 1;
              if ((pos_939524126.x == 7)) {
              pos_939524126.x = ((pos_939524126.x - 1) & 0xff);
              }
              
              }
              else {
                if (!(pos_939524126.x == ((self_939524123.drawing.size - 10) & 0xff))) Temporary11 = false; else {                  Temporary11 = (pos_939524126.y == 9);                }                if (!!(Temporary11)) Temporary10 = false; else {                  Temporary10 = (alignmentPatternBoundsX_939524127[((pos_939524126.x + 1) & 0xff)] != undefined);                }                if (!Temporary10) Temporary9 = false; else {                  Temporary9 = (alignmentPatternLowerBoundsY_939524129[((pos_939524126.y - 1) & 0xff)] != undefined);                }              if (Temporary9) {
              if (!((alignmentPatternBoundsX_939524127[pos_939524126.x] != undefined))) {
              pos_939524126.direction = 2;
              pos_939524126.repeat = 4;
              }
              else {
              pos_939524126.y = ((pos_939524126.y - 5) & 0xff);
              }
              
              }
              }}}
              break;
            case 3:
              if ((pos_939524126.y == 5)) {
              pos_939524126.y = ((pos_939524126.y + 1) & 0xff);
              }
              else {
                if ((pos_939524126.y == ((self_939524123.drawing.size - 1) & 0xff))) Temporary13 = true; else {                  if (!(7 <= self_939524123.version)) Temporary15 = false; else {                    Temporary15 = (pos_939524126.y == ((self_939524123.drawing.size - 12) & 0xff));                  }                  if (!Temporary15) Temporary14 = false; else {                    Temporary14 = contains_654311537(HEX2EHEX2E_671088738(0, 5), pos_939524126.x);                  }                  Temporary13 = Temporary14;                }                if (Temporary13) Temporary12 = true; else {                  if (!(pos_939524126.y == ((self_939524123.drawing.size - 9) & 0xff))) Temporary16 = false; else {                    Temporary16 = contains_654311537(HEX2EHEX2E_671088738(0, 6), pos_939524126.x);                  }                  Temporary12 = Temporary16;                }              if (Temporary12) {
              pos_939524126.direction = 0;
              pos_939524126.repeat = 1;
              pos_939524126.orientation = 0;
              if ((pos_939524126.x == 9)) {
              pos_939524126.y = ((pos_939524126.y - 8) & 0xff);
              }
              
              }
              else {
                if (!(pos_939524126.x == 4)) Temporary19 = false; else {                  Temporary19 = (pos_939524126.y == ((self_939524123.drawing.size - 10) & 0xff));                }                if (!!(Temporary19)) Temporary18 = false; else {                  Temporary18 = (alignmentPatternBoundsX_939524127[((pos_939524126.x + 1) & 0xff)] != undefined);                }                if (!Temporary18) Temporary17 = false; else {                  Temporary17 = (alignmentPatternUpperBoundsY_939524128[((pos_939524126.y + 1) & 0xff)] != undefined);                }              if (Temporary17) {
              if (!((alignmentPatternBoundsX_939524127[pos_939524126.x] != undefined))) {
              pos_939524126.direction = 4;
              pos_939524126.repeat = 4;
              }
              else {
              pos_939524126.y = ((pos_939524126.y + 5) & 0xff);
              }
              
              }
              }}
              break;
            case 4:
              if ((pos_939524126.y == 5)) {
              pos_939524126.y = ((pos_939524126.y + 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              
              }
              
              break;
            case 2:
              if ((pos_939524126.y == 7)) {
              pos_939524126.y = ((pos_939524126.y - 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              
              }
              
              break;
            default: 
              break;
            }
            switch (pos_939524126.direction) {
            case 0:
              pos_939524126.x = ((pos_939524126.x - 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              else {
                switch (pos_939524126.orientation) {
                case 0:
                  Temporary20 = 1;
                  break;
                case 1:
                  Temporary20 = 3;
                  break;
                }
                pos_939524126.direction = Temporary20;
              }
              
              break;
            case 1:
              pos_939524126.x = ((pos_939524126.x + 1) & 0xff);
              pos_939524126.y = ((pos_939524126.y - 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              else {
                pos_939524126.direction = 0;
              }
              
              break;
            case 2:
              pos_939524126.y = ((pos_939524126.y - 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              else {
                pos_939524126.direction = 1;
              }
              
              break;
            case 3:
              pos_939524126.x = ((pos_939524126.x + 1) & 0xff);
              pos_939524126.y = ((pos_939524126.y + 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              else {
                pos_939524126.direction = 0;
              }
              
              break;
            case 4:
              pos_939524126.y = ((pos_939524126.y + 1) & 0xff);
              if ((0 < pos_939524126.repeat)) {
              pos_939524126.repeat = ((pos_939524126.repeat - 1) & 0xff);
              }
              else {
                pos_939524126.direction = 3;
              }
              
              break;
            }
            i_486539338 = addInt(i_486539338, 1);
          }
      } while (false);
    } while (false);

  
}

function calcAlignmentPatternBounds_654311453(self_654311454) {
  var result_654311455 = {};

    if ((1 < (alignmentPatternLocations_805306550[chckIndx(self_654311454.version, 1, (alignmentPatternLocations_805306550).length + (1) - 1) - (1)]).length)) {
    result_654311455 = nimCopy(result_654311455, SetPlus(result_654311455, ConstSet5), NTI654311478);
    }
    
    Label1: do {
      var pos_654311485 = 0;
      var colontmp__486539394 = [];
      colontmp__486539394 = alignmentPatternLocations_805306550[chckIndx(self_654311454.version, 1, (alignmentPatternLocations_805306550).length + (1) - 1) - (1)];
      var i_486539395 = 0;
      var L_486539396 = (colontmp__486539394).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539395 < L_486539396)) break Label3;
            pos_654311485 = colontmp__486539394[chckIndx(i_486539395, 0, (colontmp__486539394).length - 1)];
            result_654311455 = nimCopy(result_654311455, SetPlus(result_654311455, setConstr([((pos_654311485 - 2) & 0xff), ((pos_654311485 + 2) & 0xff)])), NTI654311478);
            i_486539395 = addInt(i_486539395, 1);
            if (!(((colontmp__486539394).length == L_486539396))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);

  return result_654311455;

}

function HEX5BHEX5D_704643106(self_704643107, x_704643108, y_704643109) {
  var result_704643110 = false;

    var bitPos_704643111 = (((((y_704643109 & 0xffff) * (self_704643107.size & 0xffff)) & 0xffff) + (x_704643108 & 0xffff)) & 0xffff);
    result_704643110 = (((self_704643107.matrix[chckIndx(((bitPos_704643111 / 8) & 0xffff), 0, (self_704643107.matrix).length - 1)] >>> ((7 - (bitPos_704643111 % 8)) & 0xffff)) & 1) == 1);

  return result_704643110;

}

function applyMaskPattern_654311513(self_654311514, mask_654311515) {
                        var Temporary7;
                          var Temporary8;
                          var Temporary9;
                          var Temporary10;
                          var Temporary11;
                          var Temporary12;
                          var Temporary13;
                            var Temporary14;
                            var Temporary15;
                            var Temporary16;
                            var Temporary17;
                              var Temporary18;
                              var Temporary19;
                                var Temporary20;
                            var Temporary21;
                            var Temporary22;
                            var Temporary23;
                            var Temporary24;
                              var Temporary25;
                        var Temporary32;
                          var Temporary33;
                          var Temporary34;
                          var Temporary35;
                          var Temporary36;
                          var Temporary37;
                          var Temporary38;
                            var Temporary39;
                            var Temporary40;
                            var Temporary41;
                            var Temporary42;
                              var Temporary43;
                              var Temporary44;
                                var Temporary45;
                            var Temporary46;
                            var Temporary47;
                            var Temporary48;
                            var Temporary49;
                              var Temporary50;
                        var Temporary57;
                          var Temporary58;
                          var Temporary59;
                          var Temporary60;
                          var Temporary61;
                          var Temporary62;
                          var Temporary63;
                            var Temporary64;
                            var Temporary65;
                            var Temporary66;
                            var Temporary67;
                              var Temporary68;
                              var Temporary69;
                                var Temporary70;
                            var Temporary71;
                            var Temporary72;
                            var Temporary73;
                            var Temporary74;
                              var Temporary75;
                        var Temporary82;
                          var Temporary83;
                          var Temporary84;
                          var Temporary85;
                          var Temporary86;
                          var Temporary87;
                          var Temporary88;
                            var Temporary89;
                            var Temporary90;
                            var Temporary91;
                            var Temporary92;
                              var Temporary93;
                              var Temporary94;
                                var Temporary95;
                            var Temporary96;
                            var Temporary97;
                            var Temporary98;
                            var Temporary99;
                              var Temporary100;
                        var Temporary107;
                          var Temporary108;
                          var Temporary109;
                          var Temporary110;
                          var Temporary111;
                          var Temporary112;
                          var Temporary113;
                            var Temporary114;
                            var Temporary115;
                            var Temporary116;
                            var Temporary117;
                              var Temporary118;
                              var Temporary119;
                                var Temporary120;
                            var Temporary121;
                            var Temporary122;
                            var Temporary123;
                            var Temporary124;
                              var Temporary125;
                        var Temporary132;
                          var Temporary133;
                          var Temporary134;
                          var Temporary135;
                          var Temporary136;
                          var Temporary137;
                          var Temporary138;
                            var Temporary139;
                            var Temporary140;
                            var Temporary141;
                            var Temporary142;
                              var Temporary143;
                              var Temporary144;
                                var Temporary145;
                            var Temporary146;
                            var Temporary147;
                            var Temporary148;
                            var Temporary149;
                              var Temporary150;
                        var Temporary157;
                          var Temporary158;
                          var Temporary159;
                          var Temporary160;
                          var Temporary161;
                          var Temporary162;
                          var Temporary163;
                            var Temporary164;
                            var Temporary165;
                            var Temporary166;
                            var Temporary167;
                              var Temporary168;
                              var Temporary169;
                                var Temporary170;
                            var Temporary171;
                            var Temporary172;
                            var Temporary173;
                            var Temporary174;
                              var Temporary175;
                        var Temporary182;
                          var Temporary183;
                          var Temporary184;
                          var Temporary185;
                          var Temporary186;
                          var Temporary187;
                          var Temporary188;
                            var Temporary189;
                            var Temporary190;
                            var Temporary191;
                            var Temporary192;
                              var Temporary193;
                              var Temporary194;
                                var Temporary195;
                            var Temporary196;
                            var Temporary197;
                            var Temporary198;
                            var Temporary199;
                              var Temporary200;

    var alignmentPatternBounds_654311517 = calcAlignmentPatternBounds_654311453(self_654311514);
    switch (mask_654311515) {
    case 0:
      Label1: do {
        var x_654311524 = 0;
        var i_486539349 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(i_486539349 < self_654311514.drawing.size)) break Label3;
              x_654311524 = i_486539349;
              Label4: do {
                var y_654311529 = 0;
                var i_486539347 = 0;
                Label5: do {
                    Label6: while (true) {
                    if (!(i_486539347 < self_654311514.drawing.size)) break Label6;
                      y_654311529 = i_486539347;
                        if (!((((y_654311529 + x_654311524) & 0xff) % 2) == 0)) Temporary7 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654311524)) Temporary13 = false; else {                            Temporary13 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654311529] != undefined);                          }                          if (Temporary13) Temporary12 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654311524)) Temporary14 = false; else {                              Temporary14 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654311529);                            }                            Temporary12 = Temporary14;                          }                          if (Temporary12) Temporary11 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654311524)) Temporary15 = false; else {                              Temporary15 = (y_654311529 == 6);                            }                            Temporary11 = Temporary15;                          }                          if (Temporary11) Temporary10 = true; else {                            if (!(x_654311524 == 6)) Temporary16 = false; else {                              Temporary16 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654311529);                            }                            Temporary10 = Temporary16;                          }                          if (Temporary10) Temporary9 = true; else {                            if (!(7 <= self_654311514.version)) Temporary17 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654311524)) Temporary19 = false; else {                                Temporary19 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654311529);                              }                              if (Temporary19) Temporary18 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654311524)) Temporary20 = false; else {                                  Temporary20 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654311529);                                }                                Temporary18 = Temporary20;                              }                              Temporary17 = Temporary18;                            }                            Temporary9 = Temporary17;                          }                          if (Temporary9) Temporary8 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654311524)) Temporary24 = false; else {                              Temporary24 = (y_654311529 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary24) Temporary23 = true; else {                              if (!(x_654311524 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary25 = false; else {                                Temporary25 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654311529);                              }                              Temporary23 = Temporary25;                            }                            if (!!(Temporary23)) Temporary22 = false; else {                              Temporary22 = (alignmentPatternBounds_654311517[x_654311524] != undefined);                            }                            if (!Temporary22) Temporary21 = false; else {                              Temporary21 = (alignmentPatternBounds_654311517[y_654311529] != undefined);                            }                            Temporary8 = Temporary21;                          }                          Temporary7 = !(Temporary8);                        }                      if (Temporary7) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654311524, y_654311529, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654311524, y_654311529)));
                      }
                      
                      i_486539347 = ((i_486539347 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539349 = ((i_486539349 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 1:
      Label26: do {
        var x_654311691 = 0;
        var i_486539355 = 0;
        Label27: do {
            Label28: while (true) {
            if (!(i_486539355 < self_654311514.drawing.size)) break Label28;
              x_654311691 = i_486539355;
              Label29: do {
                var y_654311696 = 0;
                var i_486539353 = 0;
                Label30: do {
                    Label31: while (true) {
                    if (!(i_486539353 < self_654311514.drawing.size)) break Label31;
                      y_654311696 = i_486539353;
                        if (!((y_654311696 % 2) == 0)) Temporary32 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654311691)) Temporary38 = false; else {                            Temporary38 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654311696] != undefined);                          }                          if (Temporary38) Temporary37 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654311691)) Temporary39 = false; else {                              Temporary39 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654311696);                            }                            Temporary37 = Temporary39;                          }                          if (Temporary37) Temporary36 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654311691)) Temporary40 = false; else {                              Temporary40 = (y_654311696 == 6);                            }                            Temporary36 = Temporary40;                          }                          if (Temporary36) Temporary35 = true; else {                            if (!(x_654311691 == 6)) Temporary41 = false; else {                              Temporary41 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654311696);                            }                            Temporary35 = Temporary41;                          }                          if (Temporary35) Temporary34 = true; else {                            if (!(7 <= self_654311514.version)) Temporary42 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654311691)) Temporary44 = false; else {                                Temporary44 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654311696);                              }                              if (Temporary44) Temporary43 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654311691)) Temporary45 = false; else {                                  Temporary45 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654311696);                                }                                Temporary43 = Temporary45;                              }                              Temporary42 = Temporary43;                            }                            Temporary34 = Temporary42;                          }                          if (Temporary34) Temporary33 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654311691)) Temporary49 = false; else {                              Temporary49 = (y_654311696 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary49) Temporary48 = true; else {                              if (!(x_654311691 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary50 = false; else {                                Temporary50 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654311696);                              }                              Temporary48 = Temporary50;                            }                            if (!!(Temporary48)) Temporary47 = false; else {                              Temporary47 = (alignmentPatternBounds_654311517[x_654311691] != undefined);                            }                            if (!Temporary47) Temporary46 = false; else {                              Temporary46 = (alignmentPatternBounds_654311517[y_654311696] != undefined);                            }                            Temporary33 = Temporary46;                          }                          Temporary32 = !(Temporary33);                        }                      if (Temporary32) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654311691, y_654311696, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654311691, y_654311696)));
                      }
                      
                      i_486539353 = ((i_486539353 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539355 = ((i_486539355 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 2:
      Label51: do {
        var x_654311856 = 0;
        var i_486539361 = 0;
        Label52: do {
            Label53: while (true) {
            if (!(i_486539361 < self_654311514.drawing.size)) break Label53;
              x_654311856 = i_486539361;
              Label54: do {
                var y_654311861 = 0;
                var i_486539359 = 0;
                Label55: do {
                    Label56: while (true) {
                    if (!(i_486539359 < self_654311514.drawing.size)) break Label56;
                      y_654311861 = i_486539359;
                        if (!((x_654311856 % 3) == 0)) Temporary57 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654311856)) Temporary63 = false; else {                            Temporary63 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654311861] != undefined);                          }                          if (Temporary63) Temporary62 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654311856)) Temporary64 = false; else {                              Temporary64 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654311861);                            }                            Temporary62 = Temporary64;                          }                          if (Temporary62) Temporary61 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654311856)) Temporary65 = false; else {                              Temporary65 = (y_654311861 == 6);                            }                            Temporary61 = Temporary65;                          }                          if (Temporary61) Temporary60 = true; else {                            if (!(x_654311856 == 6)) Temporary66 = false; else {                              Temporary66 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654311861);                            }                            Temporary60 = Temporary66;                          }                          if (Temporary60) Temporary59 = true; else {                            if (!(7 <= self_654311514.version)) Temporary67 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654311856)) Temporary69 = false; else {                                Temporary69 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654311861);                              }                              if (Temporary69) Temporary68 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654311856)) Temporary70 = false; else {                                  Temporary70 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654311861);                                }                                Temporary68 = Temporary70;                              }                              Temporary67 = Temporary68;                            }                            Temporary59 = Temporary67;                          }                          if (Temporary59) Temporary58 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654311856)) Temporary74 = false; else {                              Temporary74 = (y_654311861 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary74) Temporary73 = true; else {                              if (!(x_654311856 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary75 = false; else {                                Temporary75 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654311861);                              }                              Temporary73 = Temporary75;                            }                            if (!!(Temporary73)) Temporary72 = false; else {                              Temporary72 = (alignmentPatternBounds_654311517[x_654311856] != undefined);                            }                            if (!Temporary72) Temporary71 = false; else {                              Temporary71 = (alignmentPatternBounds_654311517[y_654311861] != undefined);                            }                            Temporary58 = Temporary71;                          }                          Temporary57 = !(Temporary58);                        }                      if (Temporary57) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654311856, y_654311861, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654311856, y_654311861)));
                      }
                      
                      i_486539359 = ((i_486539359 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539361 = ((i_486539361 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 3:
      Label76: do {
        var x_654312021 = 0;
        var i_486539367 = 0;
        Label77: do {
            Label78: while (true) {
            if (!(i_486539367 < self_654311514.drawing.size)) break Label78;
              x_654312021 = i_486539367;
              Label79: do {
                var y_654312026 = 0;
                var i_486539365 = 0;
                Label80: do {
                    Label81: while (true) {
                    if (!(i_486539365 < self_654311514.drawing.size)) break Label81;
                      y_654312026 = i_486539365;
                        if (!(((((y_654312026 & 0xffff) + (x_654312021 & 0xffff)) & 0xffff) % 3) == 0)) Temporary82 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654312021)) Temporary88 = false; else {                            Temporary88 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654312026] != undefined);                          }                          if (Temporary88) Temporary87 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654312021)) Temporary89 = false; else {                              Temporary89 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654312026);                            }                            Temporary87 = Temporary89;                          }                          if (Temporary87) Temporary86 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654312021)) Temporary90 = false; else {                              Temporary90 = (y_654312026 == 6);                            }                            Temporary86 = Temporary90;                          }                          if (Temporary86) Temporary85 = true; else {                            if (!(x_654312021 == 6)) Temporary91 = false; else {                              Temporary91 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654312026);                            }                            Temporary85 = Temporary91;                          }                          if (Temporary85) Temporary84 = true; else {                            if (!(7 <= self_654311514.version)) Temporary92 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654312021)) Temporary94 = false; else {                                Temporary94 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654312026);                              }                              if (Temporary94) Temporary93 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654312021)) Temporary95 = false; else {                                  Temporary95 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654312026);                                }                                Temporary93 = Temporary95;                              }                              Temporary92 = Temporary93;                            }                            Temporary84 = Temporary92;                          }                          if (Temporary84) Temporary83 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654312021)) Temporary99 = false; else {                              Temporary99 = (y_654312026 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary99) Temporary98 = true; else {                              if (!(x_654312021 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary100 = false; else {                                Temporary100 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654312026);                              }                              Temporary98 = Temporary100;                            }                            if (!!(Temporary98)) Temporary97 = false; else {                              Temporary97 = (alignmentPatternBounds_654311517[x_654312021] != undefined);                            }                            if (!Temporary97) Temporary96 = false; else {                              Temporary96 = (alignmentPatternBounds_654311517[y_654312026] != undefined);                            }                            Temporary83 = Temporary96;                          }                          Temporary82 = !(Temporary83);                        }                      if (Temporary82) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654312021, y_654312026, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654312021, y_654312026)));
                      }
                      
                      i_486539365 = ((i_486539365 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539367 = ((i_486539367 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 4:
      Label101: do {
        var x_654312186 = 0;
        var i_486539373 = 0;
        Label102: do {
            Label103: while (true) {
            if (!(i_486539373 < self_654311514.drawing.size)) break Label103;
              x_654312186 = i_486539373;
              Label104: do {
                var y_654312191 = 0;
                var i_486539371 = 0;
                Label105: do {
                    Label106: while (true) {
                    if (!(i_486539371 < self_654311514.drawing.size)) break Label106;
                      y_654312191 = i_486539371;
                        if (!((((((y_654312191 / 2) & 0xff) + ((x_654312186 / 3) & 0xff)) & 0xff) % 2) == 0)) Temporary107 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654312186)) Temporary113 = false; else {                            Temporary113 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654312191] != undefined);                          }                          if (Temporary113) Temporary112 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654312186)) Temporary114 = false; else {                              Temporary114 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654312191);                            }                            Temporary112 = Temporary114;                          }                          if (Temporary112) Temporary111 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654312186)) Temporary115 = false; else {                              Temporary115 = (y_654312191 == 6);                            }                            Temporary111 = Temporary115;                          }                          if (Temporary111) Temporary110 = true; else {                            if (!(x_654312186 == 6)) Temporary116 = false; else {                              Temporary116 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654312191);                            }                            Temporary110 = Temporary116;                          }                          if (Temporary110) Temporary109 = true; else {                            if (!(7 <= self_654311514.version)) Temporary117 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654312186)) Temporary119 = false; else {                                Temporary119 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654312191);                              }                              if (Temporary119) Temporary118 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654312186)) Temporary120 = false; else {                                  Temporary120 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654312191);                                }                                Temporary118 = Temporary120;                              }                              Temporary117 = Temporary118;                            }                            Temporary109 = Temporary117;                          }                          if (Temporary109) Temporary108 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654312186)) Temporary124 = false; else {                              Temporary124 = (y_654312191 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary124) Temporary123 = true; else {                              if (!(x_654312186 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary125 = false; else {                                Temporary125 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654312191);                              }                              Temporary123 = Temporary125;                            }                            if (!!(Temporary123)) Temporary122 = false; else {                              Temporary122 = (alignmentPatternBounds_654311517[x_654312186] != undefined);                            }                            if (!Temporary122) Temporary121 = false; else {                              Temporary121 = (alignmentPatternBounds_654311517[y_654312191] != undefined);                            }                            Temporary108 = Temporary121;                          }                          Temporary107 = !(Temporary108);                        }                      if (Temporary107) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654312186, y_654312191, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654312186, y_654312191)));
                      }
                      
                      i_486539371 = ((i_486539371 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539373 = ((i_486539373 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 5:
      Label126: do {
        var x_654312351 = 0;
        var i_486539379 = 0;
        Label127: do {
            Label128: while (true) {
            if (!(i_486539379 < self_654311514.drawing.size)) break Label128;
              x_654312351 = i_486539379;
              Label129: do {
                var y_654312356 = 0;
                var i_486539377 = 0;
                Label130: do {
                    Label131: while (true) {
                    if (!(i_486539377 < self_654311514.drawing.size)) break Label131;
                      y_654312356 = i_486539377;
                        if (!(((((((y_654312356 & 0xffff) * (x_654312351 & 0xffff)) & 0xffff) % 2) + ((((y_654312356 & 0xffff) * (x_654312351 & 0xffff)) & 0xffff) % 3)) & 0xffff) == 0)) Temporary132 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654312351)) Temporary138 = false; else {                            Temporary138 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654312356] != undefined);                          }                          if (Temporary138) Temporary137 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654312351)) Temporary139 = false; else {                              Temporary139 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654312356);                            }                            Temporary137 = Temporary139;                          }                          if (Temporary137) Temporary136 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654312351)) Temporary140 = false; else {                              Temporary140 = (y_654312356 == 6);                            }                            Temporary136 = Temporary140;                          }                          if (Temporary136) Temporary135 = true; else {                            if (!(x_654312351 == 6)) Temporary141 = false; else {                              Temporary141 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654312356);                            }                            Temporary135 = Temporary141;                          }                          if (Temporary135) Temporary134 = true; else {                            if (!(7 <= self_654311514.version)) Temporary142 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654312351)) Temporary144 = false; else {                                Temporary144 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654312356);                              }                              if (Temporary144) Temporary143 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654312351)) Temporary145 = false; else {                                  Temporary145 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654312356);                                }                                Temporary143 = Temporary145;                              }                              Temporary142 = Temporary143;                            }                            Temporary134 = Temporary142;                          }                          if (Temporary134) Temporary133 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654312351)) Temporary149 = false; else {                              Temporary149 = (y_654312356 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary149) Temporary148 = true; else {                              if (!(x_654312351 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary150 = false; else {                                Temporary150 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654312356);                              }                              Temporary148 = Temporary150;                            }                            if (!!(Temporary148)) Temporary147 = false; else {                              Temporary147 = (alignmentPatternBounds_654311517[x_654312351] != undefined);                            }                            if (!Temporary147) Temporary146 = false; else {                              Temporary146 = (alignmentPatternBounds_654311517[y_654312356] != undefined);                            }                            Temporary133 = Temporary146;                          }                          Temporary132 = !(Temporary133);                        }                      if (Temporary132) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654312351, y_654312356, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654312351, y_654312356)));
                      }
                      
                      i_486539377 = ((i_486539377 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539379 = ((i_486539379 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 6:
      Label151: do {
        var x_654312516 = 0;
        var i_486539385 = 0;
        Label152: do {
            Label153: while (true) {
            if (!(i_486539385 < self_654311514.drawing.size)) break Label153;
              x_654312516 = i_486539385;
              Label154: do {
                var y_654312521 = 0;
                var i_486539383 = 0;
                Label155: do {
                    Label156: while (true) {
                    if (!(i_486539383 < self_654311514.drawing.size)) break Label156;
                      y_654312521 = i_486539383;
                        if (!((((((((y_654312521 & 0xffff) * (x_654312516 & 0xffff)) & 0xffff) % 2) + ((((y_654312521 & 0xffff) * (x_654312516 & 0xffff)) & 0xffff) % 3)) & 0xffff) % 2) == 0)) Temporary157 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654312516)) Temporary163 = false; else {                            Temporary163 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654312521] != undefined);                          }                          if (Temporary163) Temporary162 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654312516)) Temporary164 = false; else {                              Temporary164 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654312521);                            }                            Temporary162 = Temporary164;                          }                          if (Temporary162) Temporary161 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654312516)) Temporary165 = false; else {                              Temporary165 = (y_654312521 == 6);                            }                            Temporary161 = Temporary165;                          }                          if (Temporary161) Temporary160 = true; else {                            if (!(x_654312516 == 6)) Temporary166 = false; else {                              Temporary166 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654312521);                            }                            Temporary160 = Temporary166;                          }                          if (Temporary160) Temporary159 = true; else {                            if (!(7 <= self_654311514.version)) Temporary167 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654312516)) Temporary169 = false; else {                                Temporary169 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654312521);                              }                              if (Temporary169) Temporary168 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654312516)) Temporary170 = false; else {                                  Temporary170 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654312521);                                }                                Temporary168 = Temporary170;                              }                              Temporary167 = Temporary168;                            }                            Temporary159 = Temporary167;                          }                          if (Temporary159) Temporary158 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654312516)) Temporary174 = false; else {                              Temporary174 = (y_654312521 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary174) Temporary173 = true; else {                              if (!(x_654312516 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary175 = false; else {                                Temporary175 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654312521);                              }                              Temporary173 = Temporary175;                            }                            if (!!(Temporary173)) Temporary172 = false; else {                              Temporary172 = (alignmentPatternBounds_654311517[x_654312516] != undefined);                            }                            if (!Temporary172) Temporary171 = false; else {                              Temporary171 = (alignmentPatternBounds_654311517[y_654312521] != undefined);                            }                            Temporary158 = Temporary171;                          }                          Temporary157 = !(Temporary158);                        }                      if (Temporary157) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654312516, y_654312521, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654312516, y_654312521)));
                      }
                      
                      i_486539383 = ((i_486539383 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539385 = ((i_486539385 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    case 7:
      Label176: do {
        var x_654312681 = 0;
        var i_486539391 = 0;
        Label177: do {
            Label178: while (true) {
            if (!(i_486539391 < self_654311514.drawing.size)) break Label178;
              x_654312681 = i_486539391;
              Label179: do {
                var y_654312686 = 0;
                var i_486539389 = 0;
                Label180: do {
                    Label181: while (true) {
                    if (!(i_486539389 < self_654311514.drawing.size)) break Label181;
                      y_654312686 = i_486539389;
                        if (!((((((((y_654312686 & 0xffff) + (x_654312681 & 0xffff)) & 0xffff) % 2) + ((((y_654312686 & 0xffff) * (x_654312681 & 0xffff)) & 0xffff) % 3)) & 0xffff) % 2) == 0)) Temporary182 = false; else {                          if (!contains_654311537(HEX2EHEX2E_671088738(0, 8), x_654312681)) Temporary188 = false; else {                            Temporary188 = (setConstr([0, 8], [((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)])[y_654312686] != undefined);                          }                          if (Temporary188) Temporary187 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 8) & 0xff), ((self_654311514.drawing.size - 1) & 0xff)), x_654312681)) Temporary189 = false; else {                              Temporary189 = contains_654311537(HEX2EHEX2E_671088738(0, 8), y_654312686);                            }                            Temporary187 = Temporary189;                          }                          if (Temporary187) Temporary186 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), x_654312681)) Temporary190 = false; else {                              Temporary190 = (y_654312686 == 6);                            }                            Temporary186 = Temporary190;                          }                          if (Temporary186) Temporary185 = true; else {                            if (!(x_654312681 == 6)) Temporary191 = false; else {                              Temporary191 = contains_654311537(HEX2EHEX2E_671088738(9, ((self_654311514.drawing.size - 9) & 0xff)), y_654312686);                            }                            Temporary185 = Temporary191;                          }                          if (Temporary185) Temporary184 = true; else {                            if (!(7 <= self_654311514.version)) Temporary192 = false; else {                              if (!contains_654311537(HEX2EHEX2E_671088738(0, 5), x_654312681)) Temporary194 = false; else {                                Temporary194 = contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), y_654312686);                              }                              if (Temporary194) Temporary193 = true; else {                                if (!contains_654311537(HEX2EHEX2E_671088738(((self_654311514.drawing.size - 11) & 0xff), ((self_654311514.drawing.size - 9) & 0xff)), x_654312681)) Temporary195 = false; else {                                  Temporary195 = contains_654311537(HEX2EHEX2E_671088738(0, 5), y_654312686);                                }                                Temporary193 = Temporary195;                              }                              Temporary192 = Temporary193;                            }                            Temporary184 = Temporary192;                          }                          if (Temporary184) Temporary183 = true; else {                            if (!contains_654311537(HEX2EHEX2E_671088738(4, 8), x_654312681)) Temporary199 = false; else {                              Temporary199 = (y_654312686 == ((self_654311514.drawing.size - 9) & 0xff));                            }                            if (Temporary199) Temporary198 = true; else {                              if (!(x_654312681 == ((self_654311514.drawing.size - 9) & 0xff))) Temporary200 = false; else {                                Temporary200 = contains_654311537(HEX2EHEX2E_671088738(4, 8), y_654312686);                              }                              Temporary198 = Temporary200;                            }                            if (!!(Temporary198)) Temporary197 = false; else {                              Temporary197 = (alignmentPatternBounds_654311517[x_654312681] != undefined);                            }                            if (!Temporary197) Temporary196 = false; else {                              Temporary196 = (alignmentPatternBounds_654311517[y_654312686] != undefined);                            }                            Temporary183 = Temporary196;                          }                          Temporary182 = !(Temporary183);                        }                      if (Temporary182) {
                      HEX5BHEX5DHEX3D_704643183(self_654311514.drawing, x_654312681, y_654312686, !(HEX5BHEX5D_704643106(self_654311514.drawing, x_654312681, y_654312686)));
                      }
                      
                      i_486539389 = ((i_486539389 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539391 = ((i_486539391 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      break;
    }

  
}

function evaluateCondition1_671088643(self_671088644) {
  var result_671088645 = 0;

    result_671088645 = 0;
    var stateCol_671088646 = false;
    var countCol_671088647 = 0;
    var stateRow_671088648 = false;
    var countRow_671088649 = 0;
    Label1: do {
      var i_671088661 = 0;
      var i_486539402 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539402 < self_671088644.drawing.size)) break Label3;
            i_671088661 = i_486539402;
            stateRow_671088648 = HEX5BHEX5D_704643106(self_671088644.drawing, 0, i_671088661);
            countRow_671088649 = 1;
            stateCol_671088646 = HEX5BHEX5D_704643106(self_671088644.drawing, i_671088661, 0);
            countCol_671088647 = 1;
            Label4: do {
              var j_671088666 = 0;
              var i_486539400 = 1;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539400 < self_671088644.drawing.size)) break Label6;
                    j_671088666 = i_486539400;
                    if (!((stateRow_671088648 != HEX5BHEX5D_704643106(self_671088644.drawing, j_671088666, i_671088661)))) {
                    countRow_671088649 = ((countRow_671088649 + 1) & 0xffff);
                    }
                    else {
                      if ((countRow_671088649 == 5)) {
                      result_671088645 = ((result_671088645 + 3) & 0xffff);
                      }
                      else {
                      if ((5 <= countRow_671088649)) {
                      result_671088645 = ((result_671088645 + ((countRow_671088649 - 2) & 0xffff)) & 0xffff);
                      }
                      }
                      stateRow_671088648 = !(stateRow_671088648);
                      countRow_671088649 = 1;
                    }
                    
                    if (!((stateCol_671088646 != HEX5BHEX5D_704643106(self_671088644.drawing, i_671088661, j_671088666)))) {
                    countCol_671088647 = ((countCol_671088647 + 1) & 0xffff);
                    }
                    else {
                      if ((countCol_671088647 == 5)) {
                      result_671088645 = ((result_671088645 + 3) & 0xffff);
                      }
                      else {
                      if ((5 <= countCol_671088647)) {
                      result_671088645 = ((result_671088645 + ((countCol_671088647 - 2) & 0xffff)) & 0xffff);
                      }
                      }
                      stateCol_671088646 = !(stateCol_671088646);
                      countCol_671088647 = 1;
                    }
                    
                    i_486539400 = ((i_486539400 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            if ((countRow_671088649 == 5)) {
            result_671088645 = ((result_671088645 + 3) & 0xffff);
            }
            else {
            if ((5 <= countRow_671088649)) {
            result_671088645 = ((result_671088645 + ((countRow_671088649 - 2) & 0xffff)) & 0xffff);
            }
            }
            if ((countCol_671088647 == 5)) {
            result_671088645 = ((result_671088645 + 3) & 0xffff);
            }
            else {
            if ((5 <= countCol_671088647)) {
            result_671088645 = ((result_671088645 + ((countCol_671088647 - 2) & 0xffff)) & 0xffff);
            }
            }
            i_486539402 = ((i_486539402 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  return result_671088645;

}

function evaluateCondition2_671088707(self_671088708) {
  var result_671088709 = 0;

    result_671088709 = 0;
    Label1: do {
      var i_671088714 = 0;
      var colontmp__486539409 = 0;
      colontmp__486539409 = ((self_671088708.drawing.size - 1) & 0xff);
      var i_486539410 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539410 < colontmp__486539409)) break Label3;
            i_671088714 = i_486539410;
            Label4: do {
              var j_671088719 = 0;
              var colontmp__486539406 = 0;
              colontmp__486539406 = ((self_671088708.drawing.size - 1) & 0xff);
              var i_486539407 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539407 < colontmp__486539406)) break Label6;
                    j_671088719 = i_486539407;
                    var actual_671088720 = HEX5BHEX5D_704643106(self_671088708.drawing, j_671088719, i_671088714);
                    if (!((((actual_671088720 != HEX5BHEX5D_704643106(self_671088708.drawing, ((j_671088719 + 1) & 0xff), i_671088714)) || (actual_671088720 != HEX5BHEX5D_704643106(self_671088708.drawing, j_671088719, ((i_671088714 + 1) & 0xff)))) || (actual_671088720 != HEX5BHEX5D_704643106(self_671088708.drawing, ((j_671088719 + 1) & 0xff), ((i_671088714 + 1) & 0xff)))))) {
                    result_671088709 = ((result_671088709 + 3) & 0xffff);
                    }
                    
                    i_486539407 = ((i_486539407 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539410 = ((i_486539410 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  return result_671088709;

}

function HEX5BHEX5D_704643116(self_704643117, x_704643121, y_704643122) {
  var result_704643123 = 0;

    var bitPosY_704643124 = (((y_704643122 & 0xffff) * (self_704643117.size & 0xffff)) & 0xffff);
    Label1: do {
      var b_704643135 = 0;
      var colontmp__486539420 = 0;
      var colontmp__486539421 = 0;
      colontmp__486539420 = ((bitPosY_704643124 + (x_704643121.a & 0xffff)) & 0xffff);
      colontmp__486539421 = ((bitPosY_704643124 + (x_704643121.b & 0xffff)) & 0xffff);
      var res_486539423 = ((colontmp__486539420) | 0);
      Label2: do {
          Label3: while (true) {
          if (!(res_486539423 <= ((colontmp__486539421) | 0))) break Label3;
            b_704643135 = res_486539423;
            result_704643123 = (((result_704643123 << 1) + (((self_704643117.matrix[chckIndx(((b_704643135 / 8) & 0xffff), 0, (self_704643117.matrix).length - 1)] >>> ((7 - (b_704643135 % 8)) & 0xffff)) & 1) & 0xffff)) & 0xffff);
            res_486539423 = addInt(res_486539423, 1);
          }
      } while (false);
    } while (false);

  return result_704643123;

}

function HEX5BHEX5D_704643144(self_704643145, x_704643146, y_704643148) {
  var result_704643149 = 0;

    Label1: do {
      var y_704643164 = 0;
      Label2: do {
        var x_486539427 = 0;
        var res_486539428 = ((y_704643148.a) | 0);
        Label3: do {
            Label4: while (true) {
            if (!(res_486539428 <= ((y_704643148.b) | 0))) break Label4;
              x_486539427 = res_486539428;
              y_704643164 = x_486539427;
              var b_704643165 = (((((self_704643145.size & 0xffff) * (y_704643164 & 0xffff)) & 0xffff) + (x_704643146 & 0xffff)) & 0xffff);
              result_704643149 = (((result_704643149 << 1) + (((self_704643145.matrix[chckIndx(((b_704643165 / 8) & 0xffff), 0, (self_704643145.matrix).length - 1)] >>> ((7 - (b_704643165 % 8)) & 0xffff)) & 1) & 0xffff)) & 0xffff);
              res_486539428 = addInt(res_486539428, 1);
            }
        } while (false);
      } while (false);
    } while (false);

  return result_704643149;

}

function evaluateCondition3_671088725(self_671088726) {
  var result_671088727 = 0;

    result_671088727 = 0;
    Label1: do {
      var i_671088732 = 0;
      var i_486539417 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539417 < self_671088726.drawing.size)) break Label3;
            i_671088732 = i_486539417;
            Label4: do {
              var j_671088737 = 0;
              var colontmp__486539414 = 0;
              colontmp__486539414 = ((self_671088726.drawing.size - 10) & 0xff);
              var i_486539415 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539415 < colontmp__486539414)) break Label6;
                    j_671088737 = i_486539415;
                    if ((ConstSet6[HEX5BHEX5D_704643116(self_671088726.drawing, HEX2EHEX2E_671088738(j_671088737, ((j_671088737 + 10) & 0xff)), i_671088732)] != undefined)) {
                    result_671088727 = ((result_671088727 + 40) & 0xffff);
                    }
                    
                    if ((ConstSet7[HEX5BHEX5D_704643144(self_671088726.drawing, i_671088732, HEX2EHEX2E_671088738(j_671088737, ((j_671088737 + 10) & 0xff)))] != undefined)) {
                    result_671088727 = ((result_671088727 + 40) & 0xffff);
                    }
                    
                    i_486539415 = ((i_486539415 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539417 = ((i_486539417 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  return result_671088727;

}

function evaluateCondition4_671088777(self_671088778) {
    var Temporary6;

  var result_671088779 = 0;

    var darkModules_671088780 = 0;
    Label1: do {
      var i_671088788 = 0;
      var colontmp__486539432 = 0;
      colontmp__486539432 = (self_671088778.drawing.matrix).length;
      var i_486539433 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539433 < colontmp__486539432)) break Label3;
            i_671088788 = i_486539433;
            var b_671088790 = self_671088778.drawing.matrix[chckIndx(i_671088788, 0, (self_671088778.drawing.matrix).length - 1)];
            Label4: do {
                Label5: while (true) {
                if (!(0 < b_671088790)) break Label5;
                  darkModules_671088780 = ((darkModules_671088780 + 1) >>> 0);
                  b_671088790 = (b_671088790 & ((b_671088790 - 1) & 0xff));
                }
            } while (false);
            i_486539433 = addInt(i_486539433, 1);
          }
      } while (false);
    } while (false);
    switch (((((darkModules_671088780 * 100) >>> 0) / ((((self_671088778.drawing.size & 0xffff) * (self_671088778.drawing.size & 0xffff)) & 0xffff) >>> 0)) >>> 0)) {
    case 45:
    case 46:
    case 47:
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
      Temporary6 = 0;
      break;
    case 40:
    case 41:
    case 42:
    case 43:
    case 44:
    case 55:
    case 56:
    case 57:
    case 58:
    case 59:
      Temporary6 = 10;
      break;
    case 35:
    case 36:
    case 37:
    case 38:
    case 39:
    case 60:
    case 61:
    case 62:
    case 63:
    case 64:
      Temporary6 = 20;
      break;
    case 30:
    case 31:
    case 32:
    case 33:
    case 34:
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
      Temporary6 = 30;
      break;
    case 25:
    case 26:
    case 27:
    case 28:
    case 29:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
      Temporary6 = 40;
      break;
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
      Temporary6 = 50;
      break;
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
      Temporary6 = 60;
      break;
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
      Temporary6 = 70;
      break;
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 90:
    case 91:
    case 92:
    case 93:
    case 94:
      Temporary6 = 80;
      break;
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 95:
    case 96:
    case 97:
    case 98:
    case 99:
      Temporary6 = 90;
      break;
    default: 
      Temporary6 = 0;
      break;
    }
    result_671088779 = Temporary6;

  return result_671088779;

}

function applyBestMaskPattern_654312842(self_654312843) {
    var bestPenalty_654312848 = 65535;
    var bestMask_654312849 = 0;
    Label1: do {
      var i_654312877 = 0;
      var res_486539342 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539342 <= 7)) break Label3;
            i_654312877 = chckRange(res_486539342, 0, 7);
            var copy_654312878 = [nimCopy(null, self_654312843, NTI687865860)];
            applyMaskPattern_654311513(copy_654312878[0], i_654312877);
            var penalty_654312879 = ((((((evaluateCondition1_671088643(copy_654312878[0]) + evaluateCondition2_671088707(copy_654312878[0])) & 0xffff) + evaluateCondition3_671088725(copy_654312878[0])) & 0xffff) + evaluateCondition4_671088777(copy_654312878[0])) & 0xffff);
            if ((penalty_654312879 < bestPenalty_654312848)) {
            bestPenalty_654312848 = penalty_654312879;
            bestMask_654312849 = i_654312877;
            self_654312843.mask = chckRange(i_654312877, 0, 7);
            }
            
            res_486539342 = addInt(res_486539342, 1);
          }
      } while (false);
    } while (false);
    applyMaskPattern_654311513(self_654312843, bestMask_654312849);

  
}

function calcLen_973078547(bits_973078549) {
  var result_973078550 = 0;

  BeforeRet: do {
    result_973078550 = 16;
    Label1: do {
        Label2: while (true) {
        if (!(0 < result_973078550)) break Label2;
          var mask_973078560 = (32768 >>> ((16 - result_973078550) & 0xff));
          if (((bits_973078549 & mask_973078560) == mask_973078560)) {
          break BeforeRet;
          }
          
          result_973078550 = ((result_973078550 - 1) & 0xff);
        }
    } while (false);
  } while (false);

  return result_973078550;

}

function drawFormatInformation_973078539(self_973078540) {
    var Temporary1;

    switch (self_973078540.ecLevel) {
    case 0:
      Temporary1 = 1;
      break;
    case 1:
      Temporary1 = 0;
      break;
    case 2:
      Temporary1 = 3;
      break;
    case 3:
      Temporary1 = 2;
      break;
    }
    var bits_973078545 = (((Temporary1 << 3) + (self_973078540.mask & 0xffff)) & 0xffff);
    var ecBits_973078571 = (bits_973078545 << 10);
    var ecBitsLen_973078575 = calcLen_973078547(ecBits_973078571);
    Label2: do {
        Label3: while (true) {
        if (!(10 < ecBitsLen_973078575)) break Label3;
          var polynomial_973078580 = (1335 << ((ecBitsLen_973078575 - 11) & 0xff));
          ecBits_973078571 = (ecBits_973078571 ^ polynomial_973078580);
          ecBitsLen_973078575 = calcLen_973078547(ecBits_973078571);
        }
    } while (false);
    bits_973078545 = ((bits_973078545 << 11) | (ecBits_973078571 << 1));
    bits_973078545 = (bits_973078545 ^ 43044);
    Label4: do {
      var i_973078598 = 0;
      var res_486539437 = 0;
      Label5: do {
          Label6: while (true) {
          if (!(res_486539437 <= 5)) break Label6;
            i_973078598 = res_486539437;
            if ((((bits_973078545 >>> ((15 - i_973078598) & 0xff)) & 1) == 1)) {
            HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, i_973078598, 8, true);
            HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 8, ((((self_973078540.drawing.size - 1) & 0xff) - i_973078598) & 0xff), true);
            }
            
            res_486539437 = addInt(res_486539437, 1);
          }
      } while (false);
    } while (false);
    if ((((bits_973078545 >>> 9) & 1) == 1)) {
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 7, 8, true);
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 8, ((self_973078540.drawing.size - 7) & 0xff), true);
    }
    
    if ((((bits_973078545 >>> 8) & 1) == 1)) {
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 8, 8, true);
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, ((self_973078540.drawing.size - 8) & 0xff), 8, true);
    }
    
    if ((((bits_973078545 >>> 7) & 1) == 1)) {
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 8, 7, true);
    HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, ((self_973078540.drawing.size - 7) & 0xff), 8, true);
    }
    
    Label7: do {
      var i_973078619 = 0;
      var res_486539440 = 9;
      Label8: do {
          Label9: while (true) {
          if (!(res_486539440 <= 14)) break Label9;
            i_973078619 = res_486539440;
            if ((((bits_973078545 >>> ((15 - i_973078619) & 0xff)) & 1) == 1)) {
            HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, 8, ((14 - i_973078619) & 0xff), true);
            HEX5BHEX5DHEX3D_704643183(self_973078540.drawing, ((((self_973078540.drawing.size - 15) & 0xff) + i_973078619) & 0xff), 8, true);
            }
            
            res_486539440 = addInt(res_486539440, 1);
          }
      } while (false);
    } while (false);

  
}

function calcLen_973078628(bits_973078630) {
  var result_973078631 = 0;

  BeforeRet: do {
    result_973078631 = 32;
    Label1: do {
        Label2: while (true) {
        if (!(0 < result_973078631)) break Label2;
          var mask_973078641 = (2147483648 >>> ((32 - result_973078631) & 0xff));
          if (((bits_973078630 & mask_973078641) == mask_973078641)) {
          break BeforeRet;
          }
          
          result_973078631 = ((result_973078631 - 1) & 0xff);
        }
    } while (false);
  } while (false);

  return result_973078631;

}

function drawVersionInformation_973078624(self_973078625) {
  BeforeRet: do {
    if ((self_973078625.version < 7)) {
    break BeforeRet;
    }
    
    var bits_973078626 = (self_973078625.version >>> 0);
    var ecBits_973078652 = (bits_973078626 << 12);
    var ecBitsLen_973078656 = calcLen_973078628(ecBits_973078652);
    Label1: do {
        Label2: while (true) {
        if (!(12 < ecBitsLen_973078656)) break Label2;
          var polynomial_973078661 = (7973 << ((ecBitsLen_973078656 - 13) & 0xff));
          ecBits_973078652 = (ecBits_973078652 ^ polynomial_973078661);
          ecBitsLen_973078656 = calcLen_973078628(ecBits_973078652);
        }
    } while (false);
    bits_973078626 = ((bits_973078626 << 26) | (ecBits_973078652 << 14));
    Label3: do {
      var i_973078679 = 0;
      var res_486539444 = 0;
      Label4: do {
          Label5: while (true) {
          if (!(res_486539444 <= 17)) break Label5;
            i_973078679 = res_486539444;
            if ((((bits_973078626 >>> ((31 - i_973078679) & 0xff)) & 1) == 1)) {
            HEX5BHEX5DHEX3D_704643183(self_973078625.drawing, ((5 - ((i_973078679 / 3) & 0xff)) & 0xff), ((((self_973078625.drawing.size - 9) & 0xff) - (i_973078679 % 3)) & 0xff), true);
            HEX5BHEX5DHEX3D_704643183(self_973078625.drawing, ((((self_973078625.drawing.size - 9) & 0xff) - (i_973078679 % 3)) & 0xff), ((5 - ((i_973078679 / 3) & 0xff)) & 0xff), true);
            }
            
            res_486539444 = addInt(res_486539444, 1);
          }
      } while (false);
    } while (false);
  } while (false);

  
}

function draw_637534215(qr_637534216) {
  var result_637534217 = [({version: 0, ecLevel: 0, mask: 0, drawing: ({matrix: [], size: 0})})];

    result_637534217[0] = nimCopy(result_637534217[0], newDrawedQRCode_687865879(qr_637534216), NTI687865860);
    drawFinderPatterns_956301317(result_637534217[0]);
    drawAlignmentPatterns_956301580(result_637534217[0]);
    drawTimingPatterns_956301624(result_637534217[0]);
    drawDarkModule_956301637(result_637534217[0]);
    drawData_939524122(result_637534217[0], qr_637534216.data);
    applyBestMaskPattern_654312842(result_637534217[0]);
    drawFormatInformation_973078539(result_637534217[0]);
    drawVersionInformation_973078624(result_637534217[0]);

  return result_637534217[0];

}

function newBitArray_771751940(size_771751941) {
  var result_771751942 = ({pos: 0, data: []});

    result_771751942 = nimCopy(result_771751942, {pos: 0, data: []}, NTI771751939);
    if (result_771751942.data.length < ((size_771751941) | 0)) { for (var i = result_771751942.data.length ; i < ((size_771751941) | 0) ; ++i) result_771751942.data.push(0); }
               else { result_771751942.data.length = ((size_771751941) | 0); };

  return result_771751942;

}

function newEncodedQRCode_754974753(qr_754974754) {
  var result_754974755 = ({mode: 0, version: 0, ecLevel: 0, data: ({pos: 0, data: []})});

    result_754974755 = nimCopy(result_754974755, {mode: qr_754974754.mode, version: nimCopy(null, qr_754974754.version, NTI822083591), ecLevel: qr_754974754.ecLevel, data: newBitArray_771751940(((totalDataCodewords_805306379[chckIndx(qr_754974754.ecLevel, 0, (totalDataCodewords_805306379).length - 1)][chckIndx(qr_754974754.version, 1, (totalDataCodewords_805306379[chckIndx(qr_754974754.ecLevel, 0, (totalDataCodewords_805306379).length - 1)]).length + (1) - 1) - (1)] + (((((group1Blocks_805306381[chckIndx(qr_754974754.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(qr_754974754.version, 1, (group1Blocks_805306381[chckIndx(qr_754974754.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] + group2Blocks_805306385[chckIndx(qr_754974754.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(qr_754974754.version, 1, (group2Blocks_805306385[chckIndx(qr_754974754.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)]) & 0xff) & 0xffff) * (blockECCodewords_805306389[chckIndx(qr_754974754.ecLevel, 0, (blockECCodewords_805306389).length - 1)][chckIndx(qr_754974754.version, 1, (blockECCodewords_805306389[chckIndx(qr_754974754.ecLevel, 0, (blockECCodewords_805306389).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff)) & 0xffff))}, NTI754974723);

  return result_754974755;

}

function add_738197598(self_738197600, val_738197601, len_738197602) {
  BeforeRet: do {
    if ((len_738197602 == 0)) {
    break BeforeRet;
    }
    
    var arrPos_738197605 = ((self_738197600.pos / 8) & 0xffff);
    var bitsLeft_738197606 = ((8 - ((self_738197600.pos % 8) & 0xff)) & 0xff);
    if ((len_738197602 <= bitsLeft_738197606)) {
    self_738197600.data[chckIndx(arrPos_738197605, 0, (self_738197600.data).length - 1)] = ((self_738197600.data[chckIndx(arrPos_738197605, 0, (self_738197600.data).length - 1)] + ((val_738197601 & (255 >>> ((8 - len_738197602) & 0xff))) << ((bitsLeft_738197606 - len_738197602) & 0xff))) & 0xff);
    }
    else {
      var bytes_738197621 = ((((len_738197602 - bitsLeft_738197606) & 0xff) / 8) & 0xff);
      var remBits_738197622 = (((len_738197602 - bitsLeft_738197606) & 0xff) % 8);
      if ((0 < remBits_738197622)) {
      self_738197600.data[chckIndx(((((arrPos_738197605 + (bytes_738197621 & 0xffff)) & 0xffff) + 1) & 0xffff), 0, (self_738197600.data).length - 1)] = (val_738197601 << ((8 - remBits_738197622) & 0xff));
      }
      
      var val_738197633 = (val_738197601 >>> remBits_738197622);
      Label1: do {
        var i_738197638 = 0;
        var i_486539447 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(i_486539447 < bytes_738197621)) break Label3;
              i_738197638 = i_486539447;
              self_738197600.data[chckIndx(((((arrPos_738197605 + (bytes_738197621 & 0xffff)) & 0xffff) - (i_738197638 & 0xffff)) & 0xffff), 0, (self_738197600.data).length - 1)] = val_738197633;
              val_738197633 = (val_738197633 >>> 8);
              i_486539447 = ((i_486539447 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      self_738197600.data[chckIndx(arrPos_738197605, 0, (self_738197600.data).length - 1)] = ((self_738197600.data[chckIndx(arrPos_738197605, 0, (self_738197600.data).length - 1)] + (val_738197633 & (255 >>> ((8 - bitsLeft_738197606) & 0xff)))) & 0xff);
    }
    
    self_738197600.pos = ((self_738197600.pos + (len_738197602 & 0xffff)) & 0xffff);
  } while (false);

  
}

function encodeModeIndicator_889192452(self_889192453) {
    add_738197598(self_889192453.data, self_889192453.mode, 4);

  
}

function add_738197532(self_738197534, val_738197535, len_738197536) {
  BeforeRet: do {
    if ((len_738197536 == 0)) {
    break BeforeRet;
    }
    
    var arrPos_738197539 = ((self_738197534.pos / 8) & 0xffff);
    var bitsLeft_738197540 = ((8 - ((self_738197534.pos % 8) & 0xff)) & 0xff);
    if ((len_738197536 <= bitsLeft_738197540)) {
    self_738197534.data[chckIndx(arrPos_738197539, 0, (self_738197534.data).length - 1)] = ((self_738197534.data[chckIndx(arrPos_738197539, 0, (self_738197534.data).length - 1)] + (((val_738197535 & ((255 >>> ((8 - len_738197536) & 0xff)) & 0xffff)) << ((bitsLeft_738197540 - len_738197536) & 0xff)) & 0xff)) & 0xff);
    }
    else {
      var bytes_738197555 = ((((len_738197536 - bitsLeft_738197540) & 0xff) / 8) & 0xff);
      var remBits_738197556 = (((len_738197536 - bitsLeft_738197540) & 0xff) % 8);
      if ((0 < remBits_738197556)) {
      self_738197534.data[chckIndx(((((arrPos_738197539 + (bytes_738197555 & 0xffff)) & 0xffff) + 1) & 0xffff), 0, (self_738197534.data).length - 1)] = ((val_738197535 << ((8 - remBits_738197556) & 0xff)) & 0xff);
      }
      
      var val_738197567 = (val_738197535 >>> remBits_738197556);
      Label1: do {
        var i_738197577 = 0;
        var i_486539450 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(i_486539450 < bytes_738197555)) break Label3;
              i_738197577 = i_486539450;
              self_738197534.data[chckIndx(((((arrPos_738197539 + (bytes_738197555 & 0xffff)) & 0xffff) - (i_738197577 & 0xffff)) & 0xffff), 0, (self_738197534.data).length - 1)] = (val_738197567 & 0xff);
              val_738197567 = (val_738197567 >>> 8);
              i_486539450 = ((i_486539450 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      self_738197534.data[chckIndx(arrPos_738197539, 0, (self_738197534.data).length - 1)] = ((self_738197534.data[chckIndx(arrPos_738197539, 0, (self_738197534.data).length - 1)] + ((val_738197567 & ((255 >>> ((8 - bitsLeft_738197540) & 0xff)) & 0xffff)) & 0xff)) & 0xff);
    }
    
    self_738197534.pos = ((self_738197534.pos + (len_738197536 & 0xffff)) & 0xffff);
  } while (false);

  
}

function encodeCharCountIndicator_889192459(self_889192460, data_889192461) {
    var Temporary1;
    var Temporary2;
    var Temporary3;
      var Temporary4;

    if ((self_889192460.version <= 9)) {
    switch (self_889192460.mode) {
    case 1:
      Temporary2 = 10;
      break;
    case 2:
      Temporary2 = 9;
      break;
    case 4:
      Temporary2 = 8;
      break;
    }
    Temporary1 = Temporary2;
    }
    else {
    if ((27 <= self_889192460.version)) {
    switch (self_889192460.mode) {
    case 1:
      Temporary3 = 14;
      break;
    case 2:
      Temporary3 = 13;
      break;
    case 4:
      Temporary3 = 16;
      break;
    }
    Temporary1 = Temporary3;
    }
    else {
      switch (self_889192460.mode) {
      case 1:
        Temporary4 = 12;
        break;
      case 2:
        Temporary4 = 11;
        break;
      case 4:
        Temporary4 = 16;
        break;
      }
    Temporary1 = Temporary4;
    }
    }
    add_738197532(self_889192460.data, ((data_889192461).length & 0xffff), Temporary1);

  
}

function getSpecialValue_838860821(c_838860822) {
  var result_838860823 = 0;

  BeforeRet: do {
    Label1: do {
      var i_838860875 = 0;
      var val_838860876 = 0;
      var x_486539470 = 0;
      Label2: do {
        var c_486539472 = 0;
        var i_486539473 = 0;
        Label3: do {
            Label4: while (true) {
            if (!(i_486539473 <= 255)) break Label4;
              if ((ConstSet8[chckRange(i_486539473, 0, 255)] != undefined)) {
              c_486539472 = chckRange(i_486539473, 0, 255);
              i_838860875 = x_486539470;
              val_838860876 = c_486539472;
              if ((val_838860876 == c_838860822)) {
              result_838860823 = ((i_838860875 + 36) & 0xff);
              break BeforeRet;
              }
              
              x_486539470 = ((x_486539470 + 1) & 0xff);
              }
              
              i_486539473 = addInt(i_486539473, 1);
            }
        } while (false);
      } while (false);
    } while (false);
  } while (false);

  return result_838860823;

}

function getAlphanumericValue_838860877(c_838860878) {
    var Temporary1;

  var result_838860879 = 0;

    switch (c_838860878) {
    case 48:
    case 49:
    case 50:
    case 51:
    case 52:
    case 53:
    case 54:
    case 55:
    case 56:
    case 57:
      Temporary1 = ((c_838860878 - 48) & 0xff);
      break;
    case 65:
    case 66:
    case 67:
    case 68:
    case 69:
    case 70:
    case 71:
    case 72:
    case 73:
    case 74:
    case 75:
    case 76:
    case 77:
    case 78:
    case 79:
    case 80:
    case 81:
    case 82:
    case 83:
    case 84:
    case 85:
    case 86:
    case 87:
    case 88:
    case 89:
    case 90:
      Temporary1 = ((c_838860878 - 55) & 0xff);
      break;
    case 32:
    case 36:
    case 37:
    case 42:
    case 43:
    case 45:
    case 46:
    case 47:
    case 58:
      Temporary1 = getSpecialValue_838860821(c_838860878);
      break;
    default: 
      Temporary1 = 255;
      break;
    }
    result_838860879 = Temporary1;

  return result_838860879;

}

function HEX5BHEX5D_33557709(s_33557710, i_33557711) {
  var result_33557712 = 0;

    result_33557712 = s_33557710[chckIndx(subInt((s_33557710).length, i_33557711), 0, (s_33557710).length - 1)];

  return result_33557712;

}

function encodeDataCodewords_738197527(self_738197528, data_738197529) {
              var Temporary4;
              var Temporary5;

    switch (self_738197528.mode) {
    case 1:
      Label1: do {
        var iHEX60gensym0_738197531 = 0;
        var colontmp__486539453 = 0;
        colontmp__486539453 = (data_738197529).length;
        var x_486539455 = 0;
        Label2: do {
            Label3: while (true) {
            if (!(x_486539455 <= subInt(colontmp__486539453, 3))) break Label3;
              iHEX60gensym0_738197531 = x_486539455;
              if ((data_738197529[chckIndx(iHEX60gensym0_738197531, 0, (data_738197529).length - 1)] == 48)) {
              if ((data_738197529[chckIndx(addInt(iHEX60gensym0_738197531, 1), 0, (data_738197529).length - 1)] == 48)) {
              Temporary5 = 4;
              }
              else {
              Temporary5 = 7;
              }
              
              Temporary4 = Temporary5;
              }
              else {
              Temporary4 = 10;
              }
              
              add_738197532(self_738197528.data, (((((((getAlphanumericValue_838860877(data_738197529[chckIndx(iHEX60gensym0_738197531, 0, (data_738197529).length - 1)]) & 0xffff) * 100) & 0xffff) + (((getAlphanumericValue_838860877(data_738197529[chckIndx(addInt(iHEX60gensym0_738197531, 1), 0, (data_738197529).length - 1)]) & 0xffff) * 10) & 0xffff)) & 0xffff) + (getAlphanumericValue_838860877(data_738197529[chckIndx(addInt(iHEX60gensym0_738197531, 2), 0, (data_738197529).length - 1)]) & 0xffff)) & 0xffff), Temporary4);
              x_486539455 = addInt(x_486539455, 3);
            }
        } while (false);
      } while (false);
      switch (modInt((data_738197529).length, 3)) {
      case 1:
        add_738197598(self_738197528.data, getAlphanumericValue_838860877(HEX5BHEX5D_33557709(data_738197529, 1)), 4);
        break;
      case 2:
        add_738197532(self_738197528.data, (((((getAlphanumericValue_838860877(HEX5BHEX5D_33557709(data_738197529, 2)) & 0xffff) * 10) & 0xffff) + (getAlphanumericValue_838860877(HEX5BHEX5D_33557709(data_738197529, 1)) & 0xffff)) & 0xffff), 7);
        break;
      default: 
        break;
      }
      break;
    case 2:
      Label6: do {
        var iHEX60gensym34_738197665 = 0;
        var colontmp__486539458 = 0;
        colontmp__486539458 = (data_738197529).length;
        var x_486539459 = 0;
        Label7: do {
            Label8: while (true) {
            if (!(x_486539459 <= subInt(colontmp__486539458, 2))) break Label8;
              iHEX60gensym34_738197665 = x_486539459;
              add_738197532(self_738197528.data, (((((getAlphanumericValue_838860877(data_738197529[chckIndx(iHEX60gensym34_738197665, 0, (data_738197529).length - 1)]) & 0xffff) * 45) & 0xffff) + (getAlphanumericValue_838860877(data_738197529[chckIndx(addInt(iHEX60gensym34_738197665, 1), 0, (data_738197529).length - 1)]) & 0xffff)) & 0xffff), 11);
              x_486539459 = addInt(x_486539459, 2);
            }
        } while (false);
      } while (false);
      if ((modInt((data_738197529).length, 2) == 1)) {
      add_738197598(self_738197528.data, getAlphanumericValue_838860877(HEX5BHEX5D_33557709(data_738197529, 1)), 6);
      }
      
      break;
    case 4:
      Label9: do {
        var cHEX60gensym42_738197677 = 0;
        var i_486539462 = 0;
        var L_486539463 = (data_738197529).length;
        Label10: do {
            Label11: while (true) {
            if (!(i_486539462 < L_486539463)) break Label11;
              cHEX60gensym42_738197677 = data_738197529[chckIndx(i_486539462, 0, (data_738197529).length - 1)];
              add_738197598(self_738197528.data, cHEX60gensym42_738197677, 8);
              i_486539462 = addInt(i_486539462, 1);
              if (!(((data_738197529).length == L_486539463))) {
              failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
              }
              
            }
        } while (false);
      } while (false);
      break;
    }

  
}

function nextByte_771751973(self_771751974) {
    var Temporary1;

  var result_771751975 = 0;

    var bytePos_771751976 = ((self_771751974.pos % 8) & 0xff);
    if ((0 < bytePos_771751976)) {
    Temporary1 = ((8 - bytePos_771751976) & 0xff);
    }
    else {
    Temporary1 = 0;
    }
    
    result_771751975 = Temporary1;
    self_771751974.pos = ((self_771751974.pos + (result_771751975 & 0xffff)) & 0xffff);

  return result_771751975;

}

function finishDataEncoding_738197683(self_738197684) {
    var Temporary1;

    var missingBits_738197686 = ((((totalDataCodewords_805306379[chckIndx(self_738197684.ecLevel, 0, (totalDataCodewords_805306379).length - 1)][chckIndx(self_738197684.version, 1, (totalDataCodewords_805306379[chckIndx(self_738197684.ecLevel, 0, (totalDataCodewords_805306379).length - 1)]).length + (1) - 1) - (1)] * 8) & 0xffff) - self_738197684.data.pos) & 0xffff);
    if ((4 < missingBits_738197686)) {
    Temporary1 = 4;
    }
    else {
    Temporary1 = (missingBits_738197686 & 0xff);
    }
    
    var terminatorBits_738197687 = Temporary1;
    add_738197598(self_738197684.data, 0, terminatorBits_738197687);
    missingBits_738197686 = ((missingBits_738197686 - (((terminatorBits_738197687 + nextByte_771751973(self_738197684.data)) & 0xff) & 0xffff)) & 0xffff);
    var missingBytes_738197697 = ((missingBits_738197686 / 8) & 0xffff);
    Label2: do {
      var __738197702 = 0;
      var colontmp__486539476 = 0;
      colontmp__486539476 = ((missingBytes_738197697 / 2) & 0xffff);
      var res_486539477 = 1;
      Label3: do {
          Label4: while (true) {
          if (!(res_486539477 <= ((colontmp__486539476) | 0))) break Label4;
            __738197702 = res_486539477;
            add_738197598(self_738197684.data, 236, 8);
            add_738197598(self_738197684.data, 17, 8);
            res_486539477 = addInt(res_486539477, 1);
          }
      } while (false);
    } while (false);
    if (((missingBytes_738197697 % 2) == 1)) {
    add_738197598(self_738197684.data, 236, 8);
    }
    

  
}

function calcBlockPositions_872415325(self_872415326) {
    var Temporary1;
            var Temporary5;

  var result_872415327 = [];

    result_872415327 = nimCopy(null, [], NTI872415319);
    if (result_872415327.length < (Temporary1 = ((((((group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_872415326.version, 1, (group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] + group2Blocks_805306385[chckIndx(self_872415326.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_872415326.version, 1, (group2Blocks_805306385[chckIndx(self_872415326.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)]) & 0xff) + 1) & 0xff)) | 0), Temporary1)) { for (var i = result_872415327.length ; i < Temporary1 ; ++i) result_872415327.push(0); }
               else { result_872415327.length = Temporary1; };
    result_872415327[chckIndx(0, 0, (result_872415327).length - 1)] = 0;
    Label2: do {
      var i_872415346 = 0;
      var colontmp__486539493 = 0;
      colontmp__486539493 = ((group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_872415326.version, 1, (group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] + group2Blocks_805306385[chckIndx(self_872415326.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_872415326.version, 1, (group2Blocks_805306385[chckIndx(self_872415326.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)]) & 0xff);
      var res_486539494 = 1;
      Label3: do {
          Label4: while (true) {
          if (!(res_486539494 <= ((colontmp__486539493) | 0))) break Label4;
            i_872415346 = res_486539494;
            if ((i_872415346 <= group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_872415326.version, 1, (group1Blocks_805306381[chckIndx(self_872415326.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)])) {
            Temporary5 = group1BlockDataCodewords_805306383[chckIndx(self_872415326.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_872415326.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_872415326.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)];
            }
            else {
            Temporary5 = group2BlockDataCodewords_805306387[chckIndx(self_872415326.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)][chckIndx(self_872415326.version, 1, (group2BlockDataCodewords_805306387[chckIndx(self_872415326.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)]).length + (1) - 1) - (1)];
            }
            
            result_872415327[chckIndx(i_872415346, 0, (result_872415327).length - 1)] = ((result_872415327[chckIndx(((i_872415346 - 1) & 0xff), 0, (result_872415327).length - 1)] + (Temporary5 & 0xffff)) & 0xffff);
            res_486539494 = addInt(res_486539494, 1);
          }
      } while (false);
    } while (false);

  return result_872415327;

}

function HEX5BHEX5DHEX3D_872415270(s_872415272, i_872415273, x_872415274) {
    s_872415272[chckIndx(subInt((s_872415272).length, i_872415273), 0, (s_872415272).length - 1)] = x_872415274;

  
}

function gf256Mod285Multiply_872415237(x_872415238, y_872415239) {
  var result_872415240 = 0;

    result_872415240 = 0;
    Label1: do {
      var i_872415245 = 0;
      var res_486539504 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539504 <= 7)) break Label3;
            i_872415245 = res_486539504;
            result_872415240 = ((((result_872415240 << 1) >>> 0) ^ ((((result_872415240 >>> 7) >>> 0) * 285) >>> 0)) & 0xff);
            result_872415240 = (result_872415240 ^ ((((y_872415239 >>> ((7 - i_872415245) & 0xff)) & 1) * x_872415238) & 0xff));
            res_486539504 = addInt(res_486539504, 1);
          }
      } while (false);
    } while (false);

  return result_872415240;

}

function HEX5BHEX5D_872415294(s_872415296, i_872415297) {
  var result_872415298 = null;
  var result_872415298_Idx = 0;

    result_872415298 = s_872415296; result_872415298_Idx = chckIndx(subInt((s_872415296).length, i_872415297), 0, (s_872415296).length - 1);

  return [result_872415298, result_872415298_Idx];

}

function calcGeneratorPolynomial_872415258(self_872415259) {
            var Temporary7;

  var result_872415260 = [];

    var degree_872415262 = blockECCodewords_805306389[chckIndx(self_872415259.ecLevel, 0, (blockECCodewords_805306389).length - 1)][chckIndx(self_872415259.version, 1, (blockECCodewords_805306389[chckIndx(self_872415259.ecLevel, 0, (blockECCodewords_805306389).length - 1)]).length + (1) - 1) - (1)];
    result_872415260 = nimCopy(null, [], NTI704643082);
    if (result_872415260.length < ((degree_872415262) | 0)) { for (var i = result_872415260.length ; i < ((degree_872415262) | 0) ; ++i) result_872415260.push(0); }
               else { result_872415260.length = ((degree_872415262) | 0); };
    HEX5BHEX5DHEX3D_872415270(result_872415260, 1, 1);
    var root_872415278 = 1;
    Label1: do {
      var __872415286 = 0;
      var i_486539501 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539501 < degree_872415262)) break Label3;
            __872415286 = i_486539501;
            Label4: do {
              var i_872415291 = 0;
              var colontmp__486539498 = 0;
              colontmp__486539498 = ((degree_872415262 - 1) & 0xff);
              var i_486539499 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539499 < colontmp__486539498)) break Label6;
                    i_872415291 = i_486539499;
                    result_872415260[chckIndx(i_872415291, 0, (result_872415260).length - 1)] = gf256Mod285Multiply_872415237(result_872415260[chckIndx(i_872415291, 0, (result_872415260).length - 1)], root_872415278);
                    result_872415260[chckIndx(i_872415291, 0, (result_872415260).length - 1)] = (result_872415260[chckIndx(i_872415291, 0, (result_872415260).length - 1)] ^ result_872415260[chckIndx(((i_872415291 + 1) & 0xff), 0, (result_872415260).length - 1)]);
                    i_486539499 = ((i_486539499 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            HEX5BHEX5DHEX3D_872415270(result_872415260, 1, gf256Mod285Multiply_872415237((Temporary7 = HEX5BHEX5D_872415294(result_872415260, 1), Temporary7)[0][Temporary7[1]], root_872415278));
            root_872415278 = gf256Mod285Multiply_872415237(root_872415278, 2);
            i_486539501 = ((i_486539501 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  return result_872415260;

}

function HEX5BHEX5D_872415387(s_872415389, i_872415390) {
  var result_872415391 = 0;

    result_872415391 = s_872415389[chckIndx(subInt((s_872415389).length, i_872415390), 0, (s_872415389).length - 1)];

  return result_872415391;

}

function delete_872415401(x_872415403, x_872415403_Idx, i_872415404) {
    x_872415403[x_872415403_Idx].splice(i_872415404, 1);

  
}

function encodeECCodewords_872415359(self_872415360) {
    var positions_872415361 = calcBlockPositions_872415325(self_872415360);
    var generator_872415362 = calcGeneratorPolynomial_872415258(self_872415360);
    var degree_872415367 = ((generator_872415362).length & 0xff);
    Label1: do {
      var i_872415376 = 0;
      var colontmp__486539489 = 0;
      colontmp__486539489 = ((((positions_872415361).length & 0xff) - 1) & 0xff);
      var i_486539490 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539490 < colontmp__486539489)) break Label3;
            i_872415376 = i_486539490;
            Label4: do {
              var j_872415386 = 0;
              var colontmp__486539484 = 0;
              var colontmp__486539485 = 0;
              colontmp__486539484 = positions_872415361[chckIndx(i_872415376, 0, (positions_872415361).length - 1)];
              colontmp__486539485 = positions_872415361[chckIndx(((i_872415376 + 1) & 0xff), 0, (positions_872415361).length - 1)];
              var i_486539487 = colontmp__486539484;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539487 < colontmp__486539485)) break Label6;
                    j_872415386 = i_486539487;
                    var actualEcPos_872415397 = ((HEX5BHEX5D_872415387(positions_872415361, 1) + (((blockECCodewords_805306389[chckIndx(self_872415360.ecLevel, 0, (blockECCodewords_805306389).length - 1)][chckIndx(self_872415360.version, 1, (blockECCodewords_805306389[chckIndx(self_872415360.ecLevel, 0, (blockECCodewords_805306389).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (i_872415376 & 0xffff)) & 0xffff)) & 0xffff);
                    var factor_872415400 = (self_872415360.data.data[chckIndx(j_872415386, 0, (self_872415360.data.data).length - 1)] ^ self_872415360.data.data[chckIndx(actualEcPos_872415397, 0, (self_872415360.data.data).length - 1)]);
                    delete_872415401(self_872415360.data, "data", ((actualEcPos_872415397) | 0));
                    self_872415360.data.data.push(0);;
                    Label7: do {
                      var k_872415431 = 0;
                      var i_486539482 = 0;
                      Label8: do {
                          Label9: while (true) {
                          if (!(i_486539482 < degree_872415367)) break Label9;
                            k_872415431 = i_486539482;
                            self_872415360.data.data[chckIndx(((actualEcPos_872415397 + (k_872415431 & 0xffff)) & 0xffff), 0, (self_872415360.data.data).length - 1)] = (self_872415360.data.data[chckIndx(((actualEcPos_872415397 + (k_872415431 & 0xffff)) & 0xffff), 0, (self_872415360.data.data).length - 1)] ^ gf256Mod285Multiply_872415237(generator_872415362[chckIndx(k_872415431, 0, (generator_872415362).length - 1)], factor_872415400));
                            i_486539482 = ((i_486539482 + 1) & 0xff);
                          }
                      } while (false);
                    } while (false);
                    i_486539487 = ((i_486539487 + 1) & 0xffff);
                  }
              } while (false);
            } while (false);
            i_486539490 = ((i_486539490 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  
}

function HEX5BHEX5D_905969746(s_905969750, x_905969751) {
  var result_905969752 = [];

    var a_905969754 = x_905969751.a;
    var L_905969756 = addInt(subInt(((x_905969751.b) | 0), a_905969754), 1);
    result_905969752 = new Array(chckRange(L_905969756, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_905969756, 0, 2147483647) ; ++i) { result_905969752[i] = 0; }    Label1: do {
      var i_905969765 = 0;
      var i_486539530 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539530 < L_905969756)) break Label3;
            i_905969765 = i_486539530;
            result_905969752[chckIndx(i_905969765, 0, (result_905969752).length - 1)] = s_905969750[chckIndx(addInt(i_905969765, a_905969754), 0, (s_905969750).length - 1)];
            i_486539530 = addInt(i_486539530, 1);
          }
      } while (false);
    } while (false);

  return result_905969752;

}

function HEX2EHEX2E_905969703(a_905969706, b_905969707) {
  var result_905969710 = ({a: 0, b: 0});

    result_905969710 = nimCopy(result_905969710, {a: a_905969706, b: b_905969707}, NTI905969785);

  return result_905969710;

}

function calcEcStart_855638035(self_855638036) {
  var result_855638037 = 0;

    result_855638037 = (((((group1Blocks_805306381[chckIndx(self_855638036.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_855638036.version, 1, (group1Blocks_805306381[chckIndx(self_855638036.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (group1BlockDataCodewords_805306383[chckIndx(self_855638036.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_855638036.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_855638036.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff) + (((group2Blocks_805306385[chckIndx(self_855638036.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_855638036.version, 1, (group2Blocks_805306385[chckIndx(self_855638036.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (group2BlockDataCodewords_805306387[chckIndx(self_855638036.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)][chckIndx(self_855638036.version, 1, (group2BlockDataCodewords_805306387[chckIndx(self_855638036.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff)) & 0xffff);

  return result_855638037;

}

function interleaveDataCodewords_905969699(self_905969700) {
      var Temporary1;

  BeforeRet: do {
      if (!(group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_905969700.version, 1, (group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] == 1)) Temporary1 = false; else {        Temporary1 = (group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_905969700.version, 1, (group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)] == 0);      }    if (Temporary1) {
    break BeforeRet;
    }
    
    var dataCopy_905969766 = nimCopy(null, HEX5BHEX5D_905969746(self_905969700.data.data, HEX2EHEX2E_905969703(0, ((calcEcStart_855638035(self_905969700) - 1) & 0xffff))), NTI905969817);
    var n_905969767 = 0;
    Label2: do {
      var i_905969775 = 0;
      var colontmp__486539522 = 0;
      colontmp__486539522 = group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_905969700.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)];
      var i_486539523 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_486539523 < colontmp__486539522)) break Label4;
            i_905969775 = i_486539523;
            Label5: do {
              var j_905969776 = 0;
              var pos_486539514 = 0;
              var b_486539515 = 0;
              Label6: do {
                  Label7: while (true) {
                  if (!(b_486539515 < group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_905969700.version, 1, (group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)])) break Label7;
                    j_905969776 = pos_486539514;
                    self_905969700.data.data[chckIndx(n_905969767, 0, (self_905969700.data.data).length - 1)] = dataCopy_905969766[chckIndx(((j_905969776 + (i_905969775 & 0xffff)) & 0xffff), 0, (dataCopy_905969766).length - 1)];
                    n_905969767 = ((n_905969767 + 1) & 0xffff);
                    pos_486539514 = ((pos_486539514 + (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_905969700.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff);
                    b_486539515 = ((b_486539515 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            Label8: do {
              var j_905969782 = 0;
              var pos_486539519 = (((group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_905969700.version, 1, (group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_905969700.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff);
              var b_486539520 = 0;
              Label9: do {
                  Label10: while (true) {
                  if (!(b_486539520 < group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_905969700.version, 1, (group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)])) break Label10;
                    j_905969782 = pos_486539519;
                    self_905969700.data.data[chckIndx(n_905969767, 0, (self_905969700.data.data).length - 1)] = dataCopy_905969766[chckIndx(((j_905969782 + (i_905969775 & 0xffff)) & 0xffff), 0, (dataCopy_905969766).length - 1)];
                    n_905969767 = ((n_905969767 + 1) & 0xffff);
                    pos_486539519 = ((pos_486539519 + (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)][chckIndx(self_905969700.version, 1, (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff);
                    b_486539520 = ((b_486539520 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539523 = ((i_486539523 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    if ((0 < group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_905969700.version, 1, (group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)])) {
    Label11: do {
      var j_905969789 = 0;
      var pos_486539526 = (((group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_905969700.version, 1, (group1Blocks_805306381[chckIndx(self_905969700.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)][chckIndx(self_905969700.version, 1, (group1BlockDataCodewords_805306383[chckIndx(self_905969700.ecLevel, 0, (group1BlockDataCodewords_805306383).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff);
      var b_486539527 = 0;
      Label12: do {
          Label13: while (true) {
          if (!(b_486539527 < group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_905969700.version, 1, (group2Blocks_805306385[chckIndx(self_905969700.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)])) break Label13;
            j_905969789 = pos_486539526;
            self_905969700.data.data[chckIndx(n_905969767, 0, (self_905969700.data.data).length - 1)] = dataCopy_905969766[chckIndx(((((j_905969789 + (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)][chckIndx(self_905969700.version, 1, (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff) - 1) & 0xffff), 0, (dataCopy_905969766).length - 1)];
            n_905969767 = ((n_905969767 + 1) & 0xffff);
            pos_486539526 = ((pos_486539526 + (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)][chckIndx(self_905969700.version, 1, (group2BlockDataCodewords_805306387[chckIndx(self_905969700.ecLevel, 0, (group2BlockDataCodewords_805306387).length - 1)]).length + (1) - 1) - (1)] & 0xffff)) & 0xffff);
            b_486539527 = ((b_486539527 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    }
    
  } while (false);

  
}

function calcEcBlockPositions_922746885(self_922746886) {
    var Temporary1;

  var result_922746887 = [];

    result_922746887 = nimCopy(null, [], NTI872415319);
    if (result_922746887.length < (Temporary1 = ((((group1Blocks_805306381[chckIndx(self_922746886.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_922746886.version, 1, (group1Blocks_805306381[chckIndx(self_922746886.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] + group2Blocks_805306385[chckIndx(self_922746886.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_922746886.version, 1, (group2Blocks_805306385[chckIndx(self_922746886.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)]) & 0xff)) | 0), Temporary1)) { for (var i = result_922746887.length ; i < Temporary1 ; ++i) result_922746887.push(0); }
               else { result_922746887.length = Temporary1; };
    Label2: do {
      var i_922746905 = 0;
      var colontmp__486539542 = 0;
      colontmp__486539542 = ((group1Blocks_805306381[chckIndx(self_922746886.ecLevel, 0, (group1Blocks_805306381).length - 1)][chckIndx(self_922746886.version, 1, (group1Blocks_805306381[chckIndx(self_922746886.ecLevel, 0, (group1Blocks_805306381).length - 1)]).length + (1) - 1) - (1)] + group2Blocks_805306385[chckIndx(self_922746886.ecLevel, 0, (group2Blocks_805306385).length - 1)][chckIndx(self_922746886.version, 1, (group2Blocks_805306385[chckIndx(self_922746886.ecLevel, 0, (group2Blocks_805306385).length - 1)]).length + (1) - 1) - (1)]) & 0xff);
      var i_486539543 = 0;
      Label3: do {
          Label4: while (true) {
          if (!(i_486539543 < colontmp__486539542)) break Label4;
            i_922746905 = i_486539543;
            result_922746887[chckIndx(i_922746905, 0, (result_922746887).length - 1)] = (((blockECCodewords_805306389[chckIndx(self_922746886.ecLevel, 0, (blockECCodewords_805306389).length - 1)][chckIndx(self_922746886.version, 1, (blockECCodewords_805306389[chckIndx(self_922746886.ecLevel, 0, (blockECCodewords_805306389).length - 1)]).length + (1) - 1) - (1)] & 0xffff) * (i_922746905 & 0xffff)) & 0xffff);
            i_486539543 = ((i_486539543 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  return result_922746887;

}

function HEX5BHEX5D_922746936(s_922746940, x_922746941) {
  var result_922746942 = [];

    var a_922746944 = ((x_922746941.a) | 0);
    var L_922746949 = addInt(subInt(subInt((s_922746940).length, x_922746941.b), a_922746944), 1);
    result_922746942 = new Array(chckRange(L_922746949, 0, 2147483647)); for (var i = 0 ; i < chckRange(L_922746949, 0, 2147483647) ; ++i) { result_922746942[i] = 0; }    Label1: do {
      var i_922746958 = 0;
      var i_486539546 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539546 < L_922746949)) break Label3;
            i_922746958 = i_486539546;
            result_922746942[chckIndx(i_922746958, 0, (result_922746942).length - 1)] = s_922746940[chckIndx(addInt(i_922746958, a_922746944), 0, (s_922746940).length - 1)];
            i_486539546 = addInt(i_486539546, 1);
          }
      } while (false);
    } while (false);

  return result_922746942;

}

function HEX2EHEX2E_922746911(a_922746914, b_922746915) {
  var result_922746918 = ({a: 0, b: 0});

    result_922746918 = nimCopy(result_922746918, {a: a_922746914, b: b_922746915}, NTI922746986);

  return result_922746918;

}

function interleaveECCodewords_922746907(self_922746908) {
    var firstEcBlockPos_922746909 = calcEcStart_855638035(self_922746908);
    var positions_922746910 = calcEcBlockPositions_922746885(self_922746908);
    var dataCopy_922746959 = nimCopy(null, HEX5BHEX5D_922746936(self_922746908.data.data, HEX2EHEX2E_922746911(firstEcBlockPos_922746909, 1)), NTI922747006);
    var n_922746960 = firstEcBlockPos_922746909;
    Label1: do {
      var i_922746966 = 0;
      var colontmp__486539538 = 0;
      colontmp__486539538 = blockECCodewords_805306389[chckIndx(self_922746908.ecLevel, 0, (blockECCodewords_805306389).length - 1)][chckIndx(self_922746908.version, 1, (blockECCodewords_805306389[chckIndx(self_922746908.ecLevel, 0, (blockECCodewords_805306389).length - 1)]).length + (1) - 1) - (1)];
      var i_486539539 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539539 < colontmp__486539538)) break Label3;
            i_922746966 = i_486539539;
            Label4: do {
              var j_922746987 = 0;
              var i_486539535 = 0;
              var L_486539536 = (positions_922746910).length;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539535 < L_486539536)) break Label6;
                    j_922746987 = positions_922746910[chckIndx(i_486539535, 0, (positions_922746910).length - 1)];
                    self_922746908.data.data[chckIndx(n_922746960, 0, (self_922746908.data.data).length - 1)] = dataCopy_922746959[chckIndx(((j_922746987 + (i_922746966 & 0xffff)) & 0xffff), 0, (dataCopy_922746959).length - 1)];
                    n_922746960 = ((n_922746960 + 1) & 0xffff);
                    i_486539535 = addInt(i_486539535, 1);
                    if (!(((positions_922746910).length == L_486539536))) {
                    failedAssertImpl_218103864(makeNimstrLit("iterators.nim(240, 11) `len(a) == L` the length of the seq changed while iterating over it"));
                    }
                    
                  }
              } while (false);
            } while (false);
            i_486539539 = ((i_486539539 + 1) & 0xff);
          }
      } while (false);
    } while (false);

  
}

function encode_721420296(qr_721420297) {
  var result_721420298 = [({mode: 0, version: 0, ecLevel: 0, data: ({pos: 0, data: []})})];

    result_721420298[0] = nimCopy(result_721420298[0], newEncodedQRCode_754974753(qr_721420297), NTI754974723);
    encodeModeIndicator_889192452(result_721420298[0]);
    encodeCharCountIndicator_889192459(result_721420298[0], qr_721420297.data);
    encodeDataCodewords_738197527(result_721420298[0], qr_721420297.data);
    finishDataEncoding_738197683(result_721420298[0]);
    encodeECCodewords_872415359(result_721420298[0]);
    interleaveDataCodewords_905969699(result_721420298[0]);
    interleaveECCodewords_922746907(result_721420298[0]);

  return result_721420298[0];

}

function newQRCode_788529267(data_788529268, ecLevel_788529269, mode_788529270, version_788529271) {
      var Temporary1;

  var result_788529272 = ({mode: 0, version: 0, ecLevel: 0, data: []});

    result_788529272 = nimCopy(result_788529272, {mode: mode_788529270, version: nimCopy(null, version_788529271, NTI822083591), ecLevel: ecLevel_788529269, data: nimCopy(null, data_788529268, NTI33554439)}, NTI788529155);
      switch (result_788529272.mode) {
      case 1:
        Temporary1 = numericModeCapacities_805306373;
        break;
      case 2:
        Temporary1 = alphanumericModeCapacities_805306375;
        break;
      case 4:
        Temporary1 = byteModeCapacities_805306377;
        break;
      }
    if ((Temporary1[chckIndx(result_788529272.ecLevel, 0, (Temporary1).length - 1)][chckIndx(result_788529272.version, 1, (Temporary1[chckIndx(result_788529272.ecLevel, 0, (Temporary1).length - 1)]).length + (1) - 1) - (1)] < ((result_788529272.data).length & 0xffff))) {
    raiseException({message: makeNimstrLit("The data can\'t fit in the specified QR code version"), parent: null, m_type: NTI788529156, name: null, trace: [], up: null}, "DataSizeDefect");
    }
    

  return result_788529272;

}

function newQR_620756998(data_620756999, ecLevel_620757000, mode_620757001, version_620757002) {
  var result_620757003 = ({version: 0, ecLevel: 0, mask: 0, drawing: ({matrix: [], size: 0})});

    result_620757003 = nimCopy(result_620757003, draw_637534215(encode_721420296(newQRCode_788529267(data_620756999, ecLevel_620757000, mode_620757001, version_620757002))), NTI687865860);

  return result_620757003;

}

function getMostEfficientMode_788529169(data_788529170) {
              var Temporary4;

  var result_788529171 = 0;

  BeforeRet: do {
    result_788529171 = 1;
    Label1: do {
      var c_788529172 = 0;
      var i_486539549 = 0;
      var L_486539550 = (data_788529170).length;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539549 < L_486539550)) break Label3;
            c_788529172 = data_788529170[chckIndx(i_486539549, 0, (data_788529170).length - 1)];
            if (!((ConstSet9[c_788529172] != undefined))) {
            result_788529171 = 4;
            break BeforeRet;
            }
            else {
              if (!!((result_788529171 == 2))) Temporary4 = false; else {                Temporary4 = !((ConstSet10[c_788529172] != undefined));              }            if (Temporary4) {
            result_788529171 = 2;
            }
            }
            i_486539549 = addInt(i_486539549, 1);
            if (!(((data_788529170).length == L_486539550))) {
            failedAssertImpl_218103864(makeNimstrLit("iterators.nim(258, 11) `len(a) == L` the length of the string changed while iterating over it"));
            }
            
          }
      } while (false);
    } while (false);
  } while (false);

  return result_788529171;

}

function getSmallestVersion_788529195(data_788529196, mode_788529197, ecLevel_788529198) {
      var Temporary2;

  var result_788529199 = 0;

  BeforeRet: do {
    result_788529199 = 1;
    Label1: do {
      var version_788529234 = 0;
      var colontmp__486539553 = new Uint16Array(40);
      switch (mode_788529197) {
      case 1:
        Temporary2 = numericModeCapacities_805306373;
        break;
      case 2:
        Temporary2 = alphanumericModeCapacities_805306375;
        break;
      case 4:
        Temporary2 = byteModeCapacities_805306377;
        break;
      }
      colontmp__486539553 = nimCopy(colontmp__486539553, Temporary2[chckIndx(ecLevel_788529198, 0, (Temporary2).length - 1)], NTI805306387);
      var i_486539555 = 1;
      Label3: do {
          Label4: while (true) {
          if (!true) break Label4;
            version_788529234 = colontmp__486539553[chckIndx(i_486539555, 1, (colontmp__486539553).length + (1) - 1) - (1)];
            if ((((data_788529196).length & 0xffff) < version_788529234)) {
            break BeforeRet;
            }
            
            result_788529199 = ((result_788529199 + 1) & 0xff);
            if ((40 <= i_486539555)) {
            break Label3;
            }
            
            i_486539555 = ((i_486539555 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    raiseException({message: makeNimstrLit("The data can\'t fit in any QR code version with the specified ecLevel"), parent: null, m_type: NTI788529156, name: null, trace: [], up: null}, "DataSizeDefect");
  } while (false);

  return result_788529199;

}

function printTerminal_989855750(self_989855751) {
                    var Temporary7;

    console.log("\n\n\n\n\n");
    Label1: do {
      var y_989855758 = 0;
      var colontmp__486539562 = 0;
      colontmp__486539562 = self_989855751.drawing.size;
      var i_486539563 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539563 < colontmp__486539562)) break Label3;
            y_989855758 = i_486539563;
            console.log("          ");
            Label4: do {
              var x_989855763 = 0;
              var colontmp__486539559 = 0;
              colontmp__486539559 = self_989855751.drawing.size;
              var i_486539560 = 0;
              Label5: do {
                  Label6: while (true) {
                  if (!(i_486539560 < colontmp__486539559)) break Label6;
                    x_989855763 = i_486539560;
                    if (HEX5BHEX5D_704643106(self_989855751.drawing, x_989855763, y_989855758)) {
                    Temporary7 = makeNimstrLit("\xE2\x96\x88\xE2\x96\x88");
                    }
                    else {
                    Temporary7 = makeNimstrLit("  ");
                    }
                    
                    console.log(toJSStr(Temporary7));
                    i_486539560 = ((i_486539560 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            console.log("\n");
            i_486539563 = ((i_486539563 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    console.log("\n\n\n\n\n");

  
}

function parseSaturatedNatural_1056964924(s_1056964925, b_1056964926, b_1056964926_Idx, start_1056964927) {
      var Temporary1;
          var Temporary4;

  var result_1056964928 = 0;

    var i_1056964929 = start_1056964927;
    if (((i_1056964929 < (s_1056964925).length) && (s_1056964925[chckIndx(i_1056964929, 0, (s_1056964925).length - 1)] == 43))) {
    i_1056964929 = addInt(i_1056964929, 1);
    }
    
      if (!(i_1056964929 < (s_1056964925).length)) Temporary1 = false; else {        Temporary1 = (ConstSet15[s_1056964925[chckIndx(i_1056964929, 0, (s_1056964925).length - 1)]] != undefined);      }    if (Temporary1) {
    b_1056964926[b_1056964926_Idx] = 0;
    Label2: do {
        Label3: while (true) {
          if (!(i_1056964929 < (s_1056964925).length)) Temporary4 = false; else {            Temporary4 = (ConstSet16[s_1056964925[chckIndx(i_1056964929, 0, (s_1056964925).length - 1)]] != undefined);          }        if (!Temporary4) break Label3;
          var c_1056964948 = subInt(s_1056964925[chckIndx(i_1056964929, 0, (s_1056964925).length - 1)], 48);
          if ((b_1056964926[b_1056964926_Idx] <= divInt(subInt(2147483647, c_1056964948), 10))) {
          b_1056964926[b_1056964926_Idx] = addInt(mulInt(b_1056964926[b_1056964926_Idx], 10), c_1056964948);
          }
          else {
            b_1056964926[b_1056964926_Idx] = 2147483647;
          }
          
          i_1056964929 = addInt(i_1056964929, 1);
          Label5: do {
              Label6: while (true) {
              if (!((i_1056964929 < (s_1056964925).length) && (s_1056964925[chckIndx(i_1056964929, 0, (s_1056964925).length - 1)] == 95))) break Label6;
                i_1056964929 = addInt(i_1056964929, 1);
              }
          } while (false);
        }
    } while (false);
    result_1056964928 = subInt(i_1056964929, start_1056964927);
    }
    

  return result_1056964928;

}

function HEX5BHEX5D_1073745053(s_1073745056, x_1073745057) {
  var result_1073745058 = [];

    var a_1073745060 = x_1073745057.a;
    var L_1073745062 = addInt(subInt(subInt((s_1073745056).length, x_1073745057.b), a_1073745060), 1);
    result_1073745058 = nimCopy(null, mnewString(chckRange(L_1073745062, 0, 2147483647)), NTI33554439);
    Label1: do {
      var i_1073745067 = 0;
      var i_486539624 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539624 < L_1073745062)) break Label3;
            i_1073745067 = i_486539624;
            result_1073745058[chckIndx(i_1073745067, 0, (result_1073745058).length - 1)] = s_1073745056[chckIndx(addInt(i_1073745067, a_1073745060), 0, (s_1073745056).length - 1)];
            i_486539624 = addInt(i_486539624, 1);
          }
      } while (false);
    } while (false);

  return result_1073745058;

}

function parseStandardFormatSpecifier_1006633018(s_1006633019, start_1006633020, ignoreUnknownSuffix_1006633021) {
      var Temporary1;
      var Temporary2;
      var Temporary3;

  var result_1006633022 = ({fill: 0, align: 0, sign: 0, alternateForm: false, padWithZero: false, minimumWidth: 0, precision: 0, typ: 0, endPosition: 0});

    result_1006633022.fill = 32;
    result_1006633022.align = 0;
    result_1006633022.sign = 45;
    var i_1006633024 = start_1006633020;
    if (((addInt(i_1006633024, 1) < (s_1006633019).length) && (ConstSet11[s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)]] != undefined))) {
    result_1006633022.fill = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    result_1006633022.align = s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)];
    i_1006633024 = addInt(i_1006633024, 2);
    }
    else {
    if (((i_1006633024 < (s_1006633019).length) && (ConstSet12[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined))) {
    result_1006633022.align = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    i_1006633024 = addInt(i_1006633024, 1);
    }
    }
    if (((i_1006633024 < (s_1006633019).length) && (ConstSet13[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined))) {
    result_1006633022.sign = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    if (((i_1006633024 < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 35))) {
    result_1006633022.alternateForm = true;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
      if (!((addInt(i_1006633024, 1) < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 48))) Temporary1 = false; else {        Temporary1 = (ConstSet14[s_1006633019[chckIndx(addInt(i_1006633024, 1), 0, (s_1006633019).length - 1)]] != undefined);      }    if (Temporary1) {
    result_1006633022.padWithZero = true;
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    var parsedLength_1006633061 = parseSaturatedNatural_1056964924(s_1006633019, result_1006633022, "minimumWidth", i_1006633024);
    i_1006633024 = addInt(i_1006633024, parsedLength_1006633061);
    if (((i_1006633024 < (s_1006633019).length) && (s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)] == 46))) {
    i_1006633024 = addInt(i_1006633024, 1);
    var parsedLengthB_1006633070 = parseSaturatedNatural_1056964924(s_1006633019, result_1006633022, "precision", i_1006633024);
    i_1006633024 = addInt(i_1006633024, parsedLengthB_1006633070);
    }
    else {
      result_1006633022.precision = -1;
    }
    
      if (!(i_1006633024 < (s_1006633019).length)) Temporary2 = false; else {        Temporary2 = (ConstSet17[s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)]] != undefined);      }    if (Temporary2) {
    result_1006633022.typ = s_1006633019[chckIndx(i_1006633024, 0, (s_1006633019).length - 1)];
    i_1006633024 = addInt(i_1006633024, 1);
    }
    
    result_1006633022.endPosition = i_1006633024;
      if (!!((i_1006633024 == (s_1006633019).length))) Temporary3 = false; else {        Temporary3 = !(ignoreUnknownSuffix_1006633021);      }    if (Temporary3) {
    raiseException({message: (makeNimstrLit("invalid format string, cannot parse: ") || []).concat(HEX5BHEX5D_1073745053(s_1006633019, HEX2EHEX2E_956301517(i_1006633024, 1)) || []), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
    }
    

  return result_1006633022;

}

function nucruneLen(s_1073741834) {
  var result_1073741835 = 0;

    result_1073741835 = 0;
    var i_1073741836 = 0;
    Label1: do {
        Label2: while (true) {
        if (!(i_1073741836 < (s_1073741834).length)) break Label2;
          if ((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] <= 127)) {
          i_1073741836 = addInt(i_1073741836, 1);
          }
          else {
          if (((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] >>> 5) == 6)) {
          i_1073741836 = addInt(i_1073741836, 2);
          }
          else {
          if (((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] >>> 4) == 14)) {
          i_1073741836 = addInt(i_1073741836, 3);
          }
          else {
          if (((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] >>> 3) == 30)) {
          i_1073741836 = addInt(i_1073741836, 4);
          }
          else {
          if (((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] >>> 2) == 62)) {
          i_1073741836 = addInt(i_1073741836, 5);
          }
          else {
          if (((s_1073741834[chckIndx(i_1073741836, 0, (s_1073741834).length - 1)] >>> 1) == 126)) {
          i_1073741836 = addInt(i_1073741836, 6);
          }
          else {
          i_1073741836 = addInt(i_1073741836, 1);
          }
          }}}}}
          result_1073741835 = addInt(result_1073741835, 1);
        }
    } while (false);

  return result_1073741835;

}

function runeLenAt_1073741889(s_1073741890, i_1073741891) {
  var result_1073741892 = 0;

    if ((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] <= 127)) {
    result_1073741892 = 1;
    }
    else {
    if (((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] >>> 5) == 6)) {
    result_1073741892 = 2;
    }
    else {
    if (((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] >>> 4) == 14)) {
    result_1073741892 = 3;
    }
    else {
    if (((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] >>> 3) == 30)) {
    result_1073741892 = 4;
    }
    else {
    if (((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] >>> 2) == 62)) {
    result_1073741892 = 5;
    }
    else {
    if (((s_1073741890[chckIndx(i_1073741891, 0, (s_1073741890).length - 1)] >>> 1) == 126)) {
    result_1073741892 = 6;
    }
    else {
      result_1073741892 = 1;
    }
    }}}}}

  return result_1073741892;

}

function runeOffset_1073742461(s_1073742462, pos_1073742463, start_1073742464) {
  var result_1073742465 = 0;

  BeforeRet: do {
    var i_1073742466 = 0;
    var o_1073742467 = start_1073742464;
    Label1: do {
        Label2: while (true) {
        if (!(i_1073742466 < pos_1073742463)) break Label2;
          o_1073742467 = addInt(o_1073742467, chckRange(runeLenAt_1073741889(s_1073742462, o_1073742467), 0, 2147483647));
          if (((s_1073742462).length <= o_1073742467)) {
          result_1073742465 = -1;
          break BeforeRet;
          }
          
          i_1073742466 = addInt(i_1073742466, 1);
        }
    } while (false);
    result_1073742465 = o_1073742467;
    break BeforeRet;
  } while (false);

  return result_1073742465;

}

function validateUtf8_1073742101(s_1073742102) {
            var Temporary3;
            var Temporary4;
            var Temporary5;
            var Temporary6;
            var Temporary7;
            var Temporary8;

  var result_1073742103 = 0;

  BeforeRet: do {
    var i_1073742104 = 0;
    var L_1073742105 = (s_1073742102).length;
    Label1: do {
        Label2: while (true) {
        if (!(i_1073742104 < L_1073742105)) break Label2;
          if ((s_1073742102[chckIndx(i_1073742104, 0, (s_1073742102).length - 1)] <= 127)) {
          i_1073742104 = addInt(i_1073742104, 1);
          }
          else {
          if (((s_1073742102[chckIndx(i_1073742104, 0, (s_1073742102).length - 1)] >>> 5) == 6)) {
          if ((s_1073742102[chckIndx(i_1073742104, 0, (s_1073742102).length - 1)] < 194)) {
          result_1073742103 = i_1073742104;
          break BeforeRet;
          }
          
            if (!(addInt(i_1073742104, 1) < L_1073742105)) Temporary3 = false; else {              Temporary3 = ((s_1073742102[chckIndx(addInt(i_1073742104, 1), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }          if (Temporary3) {
          i_1073742104 = addInt(i_1073742104, 2);
          }
          else {
            result_1073742103 = i_1073742104;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1073742102[chckIndx(i_1073742104, 0, (s_1073742102).length - 1)] >>> 4) == 14)) {
            if (!(addInt(i_1073742104, 2) < L_1073742105)) Temporary5 = false; else {              Temporary5 = ((s_1073742102[chckIndx(addInt(i_1073742104, 1), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }            if (!Temporary5) Temporary4 = false; else {              Temporary4 = ((s_1073742102[chckIndx(addInt(i_1073742104, 2), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }          if (Temporary4) {
          i_1073742104 = addInt(i_1073742104, 3);
          }
          else {
            result_1073742103 = i_1073742104;
            break BeforeRet;
          }
          
          }
          else {
          if (((s_1073742102[chckIndx(i_1073742104, 0, (s_1073742102).length - 1)] >>> 3) == 30)) {
            if (!(addInt(i_1073742104, 3) < L_1073742105)) Temporary8 = false; else {              Temporary8 = ((s_1073742102[chckIndx(addInt(i_1073742104, 1), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }            if (!Temporary8) Temporary7 = false; else {              Temporary7 = ((s_1073742102[chckIndx(addInt(i_1073742104, 2), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }            if (!Temporary7) Temporary6 = false; else {              Temporary6 = ((s_1073742102[chckIndx(addInt(i_1073742104, 3), 0, (s_1073742102).length - 1)] >>> 6) == 2);            }          if (Temporary6) {
          i_1073742104 = addInt(i_1073742104, 4);
          }
          else {
            result_1073742103 = i_1073742104;
            break BeforeRet;
          }
          
          }
          else {
            result_1073742103 = i_1073742104;
            break BeforeRet;
          }
          }}}
        }
    } while (false);
    result_1073742103 = -1;
    break BeforeRet;
  } while (false);

  return result_1073742103;

}

function nsuRepeatChar(c_1107297274, count_1107297275) {
  var result_1107297276 = [];

    result_1107297276 = nimCopy(null, mnewString(count_1107297275), NTI33554439);
    Label1: do {
      var i_1107297281 = 0;
      var colontmp__486539630 = 0;
      colontmp__486539630 = subInt(count_1107297275, 1);
      var res_486539631 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539631 <= colontmp__486539630)) break Label3;
            i_1107297281 = res_486539631;
            result_1107297276[chckIndx(i_1107297281, 0, (result_1107297276).length - 1)] = c_1107297274;
            res_486539631 = addInt(res_486539631, 1);
          }
      } while (false);
    } while (false);

  return result_1107297276;

}

function alignString_1006632980(s_1006632981, minimumWidth_1006632982, align_1006632983, fill_1006632984) {
      var Temporary1;

  var result_1006632985 = [];

    if ((minimumWidth_1006632982 == 0)) {
    result_1006632985 = nimCopy(null, s_1006632981, NTI33554439);
    }
    else {
      if ((validateUtf8_1073742101(s_1006632981) == -1)) {
      Temporary1 = nucruneLen(s_1006632981);
      }
      else {
      Temporary1 = (s_1006632981).length;
      }
      
      var sRuneLen_1006632986 = Temporary1;
      var toFill_1006632987 = subInt(minimumWidth_1006632982, sRuneLen_1006632986);
      if ((toFill_1006632987 <= 0)) {
      result_1006632985 = nimCopy(null, s_1006632981, NTI33554439);
      }
      else {
      if (((align_1006632983 == 60) || (align_1006632983 == 0))) {
      result_1006632985 = nimCopy(null, (s_1006632981 || []).concat(nsuRepeatChar(fill_1006632984, chckRange(toFill_1006632987, 0, 2147483647)) || []), NTI33554439);
      }
      else {
      if ((align_1006632983 == 94)) {
      var half_1006632988 = divInt(toFill_1006632987, 2);
      result_1006632985 = nimCopy(null, (nsuRepeatChar(fill_1006632984, chckRange(half_1006632988, 0, 2147483647)) || []).concat(s_1006632981 || [],nsuRepeatChar(fill_1006632984, chckRange(subInt(toFill_1006632987, half_1006632988), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        result_1006632985 = nimCopy(null, (nsuRepeatChar(fill_1006632984, chckRange(toFill_1006632987, 0, 2147483647)) || []).concat(s_1006632981 || []), NTI33554439);
      }
      }}
    }
    

  return result_1006632985;

}

function formatValue_1006633122(result_1006633123, result_1006633123_Idx, value_1006633124, specifier_1006633125) {
    var spec_1006633126 = parseStandardFormatSpecifier_1006633018(specifier_1006633125, 0, false);
    var value_1006633127 = nimCopy(null, value_1006633124, NTI33554439);
    switch (spec_1006633126.typ) {
    case 115:
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for string, expected \'s\', but got ") || []).concat([spec_1006633126.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    if (!((spec_1006633126.precision == -1))) {
    if ((spec_1006633126.precision < nucruneLen(value_1006633127))) {
    (value_1006633127.length = chckRange(runeOffset_1073742461(value_1006633127, chckRange(spec_1006633126.precision, 0, 2147483647), 0), 0, 2147483647));
    }
    
    }
    
    result_1006633123[result_1006633123_Idx].push.apply(result_1006633123[result_1006633123_Idx], alignString_1006632980(value_1006633127, spec_1006633126.minimumWidth, spec_1006633126.align, spec_1006633126.fill));;

  
}

function addInt_251658405(result_251658406, result_251658406_Idx, x_251658407) {
    addChars_251658411(result_251658406, result_251658406_Idx, ((x_251658407) + ""));

  
}

function HEX24_335544329(x_335544330) {
  var result_335544331 = [[]];

    addInt_251658405(result_335544331, 0, x_335544330);

  return result_335544331[0];

}

function mkDigit_1006632965(v_1006632966, typ_1006632967) {
      var Temporary1;

  var result_1006632968 = [];

    if (!((v_1006632966 < 26))) {
    failedAssertImpl_218103864(makeNimstrLit("strformat.nim(320, 9) `v < 26` "));
    }
    
    if ((v_1006632966 < 10)) {
    result_1006632968 = nimCopy(null, nimCharToStr(chckRange(addInt(48, v_1006632966), 0, 255)), NTI33554439);
    }
    else {
      if ((typ_1006632967 == 120)) {
      Temporary1 = 97;
      }
      else {
      Temporary1 = 65;
      }
      
      result_1006632968 = nimCopy(null, nimCharToStr(chckRange(subInt(addInt(Temporary1, v_1006632966), 10), 0, 255)), NTI33554439);
    }
    

  return result_1006632968;

}

function formatInt_989855813(n_989855815, radix_989855816, spec_989855817) {
    var Temporary7;

  var result_989855818 = [];

    var v_989855821 = n_989855815;
    var negative_989855822 = false;
    var xx_989855823 = [];
    if (spec_989855817.alternateForm) {
    switch (spec_989855817.typ) {
    case 88:
      xx_989855823 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 120:
      xx_989855823 = nimCopy(null, makeNimstrLit("0x"), NTI33554439);
      break;
    case 98:
      xx_989855823 = nimCopy(null, makeNimstrLit("0b"), NTI33554439);
      break;
    case 111:
      xx_989855823 = nimCopy(null, makeNimstrLit("0o"), NTI33554439);
      break;
    default: 
      break;
    }
    }
    
    if ((v_989855821 == 0)) {
    result_989855818 = nimCopy(null, makeNimstrLit("0"), NTI33554439);
    }
    else {
      result_989855818 = nimCopy(null, [], NTI33554439);
      Label1: do {
          Label2: while (true) {
          if (!(0 < v_989855821)) break Label2;
            var d_989855824 = (v_989855821 % radix_989855816);
            v_989855821 = Math.trunc(((v_989855821 / radix_989855816) ));
            result_989855818.push.apply(result_989855818, mkDigit_1006632965(chckRange(d_989855824, -2147483648, 2147483647), spec_989855817.typ));;
          }
      } while (false);
      Label3: do {
        var idx_989855829 = 0;
        var colontmp__486539635 = 0;
        colontmp__486539635 = divInt((result_989855818).length, 2);
        var i_486539636 = 0;
        Label4: do {
            Label5: while (true) {
            if (!(i_486539636 < colontmp__486539635)) break Label5;
              idx_989855829 = i_486539636;
              var Temporary6 = result_989855818[chckIndx(idx_989855829, 0, (result_989855818).length - 1)]; result_989855818[chckIndx(idx_989855829, 0, (result_989855818).length - 1)] = result_989855818[chckIndx(subInt(subInt((result_989855818).length, idx_989855829), 1), 0, (result_989855818).length - 1)]; result_989855818[chckIndx(subInt(subInt((result_989855818).length, idx_989855829), 1), 0, (result_989855818).length - 1)] = Temporary6;              i_486539636 = addInt(i_486539636, 1);
            }
        } while (false);
      } while (false);
    }
    
    if (spec_989855817.padWithZero) {
    if (negative_989855822) Temporary7 = true; else {      Temporary7 = !((spec_989855817.sign == 45));    }    var sign_989855834 = Temporary7;
    var toFill_989855838 = subInt(subInt(subInt(spec_989855817.minimumWidth, (result_989855818).length), (xx_989855823).length), (sign_989855834 ? 1 : 0));
    if ((0 < toFill_989855838)) {
    result_989855818 = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_989855838, 0, 2147483647)) || []).concat(result_989855818 || []), NTI33554439);
    }
    
    }
    
    if (negative_989855822) {
    result_989855818 = nimCopy(null, (makeNimstrLit("-") || []).concat(xx_989855823 || [],result_989855818 || []), NTI33554439);
    }
    else {
    if (!((spec_989855817.sign == 45))) {
    result_989855818 = nimCopy(null, [spec_989855817.sign].concat(xx_989855823 || [],result_989855818 || []), NTI33554439);
    }
    else {
      result_989855818 = nimCopy(null, (xx_989855823 || []).concat(result_989855818 || []), NTI33554439);
    }
    }
    if ((spec_989855817.align == 60)) {
    Label8: do {
      var i_989855843 = 0;
      var colontmp__486539639 = 0;
      colontmp__486539639 = (result_989855818).length;
      var i_486539640 = colontmp__486539639;
      Label9: do {
          Label10: while (true) {
          if (!(i_486539640 < spec_989855817.minimumWidth)) break Label10;
            i_989855843 = i_486539640;
            addChar(result_989855818, spec_989855817.fill);;
            i_486539640 = addInt(i_486539640, 1);
          }
      } while (false);
    } while (false);
    }
    else {
      var toFill_989855844 = subInt(spec_989855817.minimumWidth, (result_989855818).length);
      if ((spec_989855817.align == 94)) {
      var half_989855845 = divInt(toFill_989855844, 2);
      result_989855818 = nimCopy(null, (nsuRepeatChar(spec_989855817.fill, chckRange(half_989855845, 0, 2147483647)) || []).concat(result_989855818 || [],nsuRepeatChar(spec_989855817.fill, chckRange(subInt(toFill_989855844, half_989855845), 0, 2147483647)) || []), NTI33554439);
      }
      else {
        if ((0 < toFill_989855844)) {
        result_989855818 = nimCopy(null, (nsuRepeatChar(spec_989855817.fill, chckRange(toFill_989855844, 0, 2147483647)) || []).concat(result_989855818 || []), NTI33554439);
        }
        
      }
      
    }
    

  return result_989855818;

}

function formatValue_989855805(result_989855807, result_989855807_Idx, value_989855808, specifier_989855809) {
  BeforeRet: do {
    if (((specifier_989855809).length == 0)) {
    result_989855807[result_989855807_Idx].push.apply(result_989855807[result_989855807_Idx], HEX24_335544329(value_989855808));;
    break BeforeRet;
    }
    
    var spec_989855810 = parseStandardFormatSpecifier_1006633018(specifier_989855809, 0, false);
    var radix_989855811 = 10;
    switch (spec_989855810.typ) {
    case 120:
    case 88:
      radix_989855811 = 16;
      break;
    case 100:
    case 0:
      break;
    case 98:
      radix_989855811 = 2;
      break;
    case 111:
      radix_989855811 = 8;
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'x\', \'X\', \'b\', \'d\', \'o\' but got: ") || []).concat([spec_989855810.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    result_989855807[result_989855807_Idx].push.apply(result_989855807[result_989855807_Idx], formatInt_989855813(value_989855808, radix_989855811, spec_989855810));;
  } while (false);

  
}

function nimFloatToString_352321654(a_352321655) {
  var result_352321656 = null;

        function nimOnlyDigitsOrMinus(n) {
      return n.toString().match(/^-?\d+$/);
    }
    if (Number.isSafeInteger(a_352321655))
      result_352321656 = a_352321655 === 0 && 1 / a_352321655 < 0 ? "-0.0" : a_352321655+".0"
    else {
      result_352321656 = a_352321655+""
      if(nimOnlyDigitsOrMinus(result_352321656)){
        result_352321656 = a_352321655+".0"
      }
    }
  

  return result_352321656;

}

function addFloat_989855909(result_989855911, result_989855911_Idx, x_989855912) {
    add_33556419(result_989855911, result_989855911_Idx, nimFloatToString_352321654(x_989855912));

  
}

function HEX24_989855905(x_989855907) {
  var result_989855908 = [[]];

    addFloat_989855909(result_989855908, 0, x_989855907);

  return result_989855908[0];

}

function nsuformatBiggestFloat(f_1107298158, format_1107298159, precision_1107298160, decimalSep_1107298161) {
  var result_1107298162 = [];

    var precision_1107298163 = precision_1107298160;
    if ((precision_1107298163 == -1)) {
    precision_1107298163 = 6;
    }
    
    var res_1107298164 = null;
    switch (format_1107298159) {
    case 0:
      res_1107298164 = f_1107298158.toString();
      break;
    case 1:
      res_1107298164 = f_1107298158.toFixed(precision_1107298163);
      break;
    case 2:
      res_1107298164 = f_1107298158.toExponential(precision_1107298163);
      break;
    }
    result_1107298162 = nimCopy(null, cstrToNimstr(res_1107298164), NTI33554439);
    if (((1.0 / f_1107298158) == -Infinity)) {
    result_1107298162 = nimCopy(null, (makeNimstrLit("-") || []).concat(cstrToNimstr(res_1107298164) || []), NTI33554439);
    }
    
    Label1: do {
      var i_1107298169 = 0;
      var colontmp__486539643 = 0;
      colontmp__486539643 = (result_1107298162).length;
      var i_486539644 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(i_486539644 < colontmp__486539643)) break Label3;
            i_1107298169 = i_486539644;
            if ((ConstSet18[result_1107298162[chckIndx(i_1107298169, 0, (result_1107298162).length - 1)]] != undefined)) {
            result_1107298162[chckIndx(i_1107298169, 0, (result_1107298162).length - 1)] = decimalSep_1107298161;
            }
            
            i_486539644 = addInt(i_486539644, 1);
          }
      } while (false);
    } while (false);

  return result_1107298162;

}

function insert_33557846(x_33557847, x_33557847_Idx, item_33557848, i_33557849) {
    var xl_33557850 = (x_33557847[x_33557847_Idx]).length;
    (x_33557847[x_33557847_Idx].length = chckRange(addInt(xl_33557850, (item_33557848).length), 0, 2147483647));
    var j_33557851 = subInt(xl_33557850, 1);
    Label1: do {
        Label2: while (true) {
        if (!(i_33557849 <= j_33557851)) break Label2;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, (item_33557848).length), 0, (x_33557847[x_33557847_Idx]).length - 1)] = x_33557847[x_33557847_Idx][chckIndx(j_33557851, 0, (x_33557847[x_33557847_Idx]).length - 1)];
          j_33557851 = subInt(j_33557851, 1);
        }
    } while (false);
    j_33557851 = 0;
    Label3: do {
        Label4: while (true) {
        if (!(j_33557851 < (item_33557848).length)) break Label4;
          x_33557847[x_33557847_Idx][chckIndx(addInt(j_33557851, i_33557849), 0, (x_33557847[x_33557847_Idx]).length - 1)] = item_33557848[chckIndx(j_33557851, 0, (item_33557848).length - 1)];
          j_33557851 = addInt(j_33557851, 1);
        }
    } while (false);

  
}

function nsuToUpperAsciiChar(c_1107296342) {
  var result_1107296343 = 0;

    if ((ConstSet20[c_1107296342] != undefined)) {
    result_1107296343 = (c_1107296342 ^ 32);
    }
    else {
      result_1107296343 = c_1107296342;
    }
    

  return result_1107296343;

}

function nsuToUpperAsciiStr(s_1107296349) {
  var result_1107296350 = [];

    result_1107296350 = nimCopy(null, mnewString(chckRange((s_1107296349).length, 0, 2147483647)), NTI33554439);
    Label1: do {
      var iHEX60gensym11_1107296356 = 0;
      var colontmp__486539649 = 0;
      colontmp__486539649 = subInt((s_1107296349).length, 1);
      var res_486539650 = 0;
      Label2: do {
          Label3: while (true) {
          if (!(res_486539650 <= colontmp__486539649)) break Label3;
            iHEX60gensym11_1107296356 = res_486539650;
            result_1107296350[chckIndx(iHEX60gensym11_1107296356, 0, (result_1107296350).length - 1)] = nsuToUpperAsciiChar(s_1107296349[chckIndx(iHEX60gensym11_1107296356, 0, (s_1107296349).length - 1)]);
            res_486539650 = addInt(res_486539650, 1);
          }
      } while (false);
    } while (false);

  return result_1107296350;

}

function formatValue_989855900(result_989855902, result_989855902_Idx, value_989855903, specifier_989855904) {
    var Temporary1;

  BeforeRet: do {
    if (((specifier_989855904).length == 0)) {
    result_989855902[result_989855902_Idx].push.apply(result_989855902[result_989855902_Idx], HEX24_989855905(value_989855903));;
    break BeforeRet;
    }
    
    var spec_989855914 = parseStandardFormatSpecifier_1006633018(specifier_989855904, 0, false);
    var fmode_989855915 = 0;
    switch (spec_989855914.typ) {
    case 101:
    case 69:
      fmode_989855915 = 2;
      break;
    case 102:
    case 70:
      fmode_989855915 = 1;
      break;
    case 103:
    case 71:
      fmode_989855915 = 0;
      break;
    case 0:
      break;
    default: 
      raiseException({message: (makeNimstrLit("invalid type in format string for number, expected one  of \'e\', \'E\', \'f\', \'F\', \'g\', \'G\' but got: ") || []).concat([spec_989855914.typ]), parent: null, m_type: NTI33555125, name: null, trace: [], up: null}, "ValueError");
      break;
    }
    var f_989855917 = [nsuformatBiggestFloat(value_989855903, fmode_989855915, chckRange(spec_989855914.precision, -1, 32), 46)];
    var sign_989855918 = false;
    if ((0.0 <= value_989855903)) {
    if (!((spec_989855914.sign == 45))) {
    sign_989855918 = true;
    if ((value_989855903 == 0.0)) {
    if (((1.0 / value_989855903) == Infinity)) {
    insert_33557846(f_989855917, 0, nimCharToStr(spec_989855914.sign), 0);
    }
    
    }
    else {
    insert_33557846(f_989855917, 0, nimCharToStr(spec_989855914.sign), 0);
    }
    
    }
    
    }
    else {
      sign_989855918 = true;
    }
    
    if (spec_989855914.padWithZero) {
    var signStr_989855919 = [];
    if (sign_989855918) {
    signStr_989855919 = nimCopy(null, nimCharToStr(f_989855917[0][chckIndx(0, 0, (f_989855917[0]).length - 1)]), NTI33554439);
    f_989855917[0] = nimCopy(null, HEX5BHEX5D_1073745053(f_989855917[0], HEX2EHEX2E_956301517(1, 1)), NTI33554439);
    }
    
    var toFill_989855941 = subInt(subInt(spec_989855914.minimumWidth, (f_989855917[0]).length), (sign_989855918 ? 1 : 0));
    if ((0 < toFill_989855941)) {
    f_989855917[0] = nimCopy(null, (nsuRepeatChar(48, chckRange(toFill_989855941, 0, 2147483647)) || []).concat(f_989855917[0] || []), NTI33554439);
    }
    
    if (sign_989855918) {
    f_989855917[0] = nimCopy(null, (signStr_989855919 || []).concat(f_989855917[0] || []), NTI33554439);
    }
    
    }
    
    if ((spec_989855914.align == 0)) {
    Temporary1 = 62;
    }
    else {
    Temporary1 = spec_989855914.align;
    }
    
    var align_989855942 = Temporary1;
    var res_989855943 = alignString_1006632980(f_989855917[0], spec_989855914.minimumWidth, align_989855942, spec_989855914.fill);
    if ((ConstSet19[spec_989855914.typ] != undefined)) {
    result_989855902[result_989855902_Idx].push.apply(result_989855902[result_989855902_Idx], nsuToUpperAsciiStr(res_989855943));;
    }
    else {
    result_989855902[result_989855902_Idx].push.apply(result_989855902[result_989855902_Idx], res_989855943);;
    }
    
  } while (false);

  
}

function printSvg_989855780(self_989855781, light_989855782, dark_989855783, alRad_989855784, moRad_989855785, moSep_989855786, class_989855787, id_989855788, forceUseRect_989855789) {
      var Temporary1;
      var Temporary44;
    
function drawRoundedRect_989856178(x_989856179, y_989856180, s_989856181, r_989856182) {
      var result_989856183 = [];

        var fmtRes_989856188 = [mnewString(0)];
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("<rect x=\""));;
        formatValue_989855805(fmtRes_989856188, 0, x_989856179, []);
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("\" y=\""));;
        formatValue_989855805(fmtRes_989856188, 0, y_989856180, []);
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("\" width=\""));;
        formatValue_989855900(fmtRes_989856188, 0, s_989856181, []);
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("\" height=\""));;
        formatValue_989855900(fmtRes_989856188, 0, s_989856181, []);
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("\" rx=\""));;
        formatValue_989855900(fmtRes_989856188, 0, r_989856182, []);
        fmtRes_989856188[0].push.apply(fmtRes_989856188[0], makeNimstrLit("\"></rect>"));;
        result_989856183 = nimCopy(null, fmtRes_989856188[0], NTI33554439);

      return result_989856183;

    }
    var Temporary45;
    var Temporary46;
    var Temporary47;
    var Temporary48;
    var Temporary49;
    var Temporary50;

  var result_989855790 = [];

    var fmtRes_989855799 = [mnewString(0)];
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("<svg class=\""));;
    formatValue_1006633122(fmtRes_989855799, 0, class_989855787, []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("\" id=\""));;
    formatValue_1006633122(fmtRes_989855799, 0, id_989855788, []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("\" version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"-5 -5 "));;
    formatValue_989855805(fmtRes_989855799, 0, ((self_989855781.drawing.size + 10) & 0xff), []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit(" "));;
    formatValue_989855805(fmtRes_989855799, 0, ((self_989855781.drawing.size + 10) & 0xff), []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("\"><path class=\"qrLight\" fill=\""));;
    formatValue_1006633122(fmtRes_989855799, 0, light_989855782, []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("\" d=\"M-5,-5h"));;
    formatValue_989855805(fmtRes_989855799, 0, ((self_989855781.drawing.size + 10) & 0xff), []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("v"));;
    formatValue_989855805(fmtRes_989855799, 0, ((self_989855781.drawing.size + 10) & 0xff), []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("h-"));;
    formatValue_989855805(fmtRes_989855799, 0, ((self_989855781.drawing.size + 10) & 0xff), []);
    fmtRes_989855799[0].push.apply(fmtRes_989855799[0], makeNimstrLit("Z\"></path>"));;
    result_989855790 = nimCopy(null, fmtRes_989855799[0], NTI33554439);
    var moSepPx_989855876 = ((0.4 * moSep_989855786) / 100.0);
      if ((0.0 < moRad_989855785)) Temporary1 = true; else {        Temporary1 = forceUseRect_989855789;      }    if (Temporary1) {
    var moRadPx_989855877 = (((0.5 - moSepPx_989855876) * moRad_989855785) / 100.0);
    var fmtRes_989855882 = [mnewString(0)];
    fmtRes_989855882[0].push.apply(fmtRes_989855882[0], makeNimstrLit("<g fill=\""));;
    formatValue_1006633122(fmtRes_989855882, 0, dark_989855783, []);
    fmtRes_989855882[0].push.apply(fmtRes_989855882[0], makeNimstrLit("\" class=\"qrDark qrRounded qrModules\">"));;
    result_989855790.push.apply(result_989855790, fmtRes_989855882[0]);;
    Label2: do {
      var y_989855889 = 0;
      var colontmp__486539570 = 0;
      colontmp__486539570 = ((self_989855781.drawing.size - 7) & 0xff);
      var i_486539571 = 7;
      Label3: do {
          Label4: while (true) {
          if (!(i_486539571 < colontmp__486539570)) break Label4;
            y_989855889 = i_486539571;
            Label5: do {
              var x_989855894 = 0;
              var colontmp__486539567 = 0;
              colontmp__486539567 = self_989855781.drawing.size;
              var i_486539568 = 0;
              Label6: do {
                  Label7: while (true) {
                  if (!(i_486539568 < colontmp__486539567)) break Label7;
                    x_989855894 = i_486539568;
                    if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989855894, y_989855889)) {
                    var fmtRes_989855899 = [mnewString(0)];
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("<rect x=\""));;
                    formatValue_989855900(fmtRes_989855899, 0, (x_989855894 + moSepPx_989855876), makeNimstrLit("<3"));
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("\" y=\""));;
                    formatValue_989855900(fmtRes_989855899, 0, (y_989855889 + moSepPx_989855876), []);
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("\" width=\""));;
                    formatValue_989855900(fmtRes_989855899, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("\" height=\""));;
                    formatValue_989855900(fmtRes_989855899, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("\" rx=\""));;
                    formatValue_989855900(fmtRes_989855899, 0, moRadPx_989855877, []);
                    fmtRes_989855899[0].push.apply(fmtRes_989855899[0], makeNimstrLit("\"></rect>"));;
                    result_989855790.push.apply(result_989855790, fmtRes_989855899[0]);;
                    }
                    
                    i_486539568 = ((i_486539568 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539571 = ((i_486539571 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    Label8: do {
      var y_989855982 = 0;
      var i_486539578 = 0;
      Label9: do {
          Label10: while (true) {
          if (!(i_486539578 < 7)) break Label10;
            y_989855982 = i_486539578;
            Label11: do {
              var x_989855987 = 0;
              var colontmp__486539575 = 0;
              colontmp__486539575 = ((self_989855781.drawing.size - 7) & 0xff);
              var i_486539576 = 7;
              Label12: do {
                  Label13: while (true) {
                  if (!(i_486539576 < colontmp__486539575)) break Label13;
                    x_989855987 = i_486539576;
                    if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989855987, y_989855982)) {
                    var fmtRes_989855992 = [mnewString(0)];
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("<rect x=\""));;
                    formatValue_989855900(fmtRes_989855992, 0, (x_989855987 + moSepPx_989855876), makeNimstrLit("<3"));
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("\" y=\""));;
                    formatValue_989855900(fmtRes_989855992, 0, (y_989855982 + moSepPx_989855876), []);
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("\" width=\""));;
                    formatValue_989855900(fmtRes_989855992, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("\" height=\""));;
                    formatValue_989855900(fmtRes_989855992, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("\" rx=\""));;
                    formatValue_989855900(fmtRes_989855992, 0, moRadPx_989855877, []);
                    fmtRes_989855992[0].push.apply(fmtRes_989855992[0], makeNimstrLit("\"></rect>"));;
                    result_989855790.push.apply(result_989855790, fmtRes_989855992[0]);;
                    }
                    
                    i_486539576 = ((i_486539576 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539578 = ((i_486539578 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    Label14: do {
      var y_989856023 = 0;
      var colontmp__486539585 = 0;
      var colontmp__486539586 = 0;
      colontmp__486539585 = ((self_989855781.drawing.size - 7) & 0xff);
      colontmp__486539586 = self_989855781.drawing.size;
      var i_486539587 = colontmp__486539585;
      Label15: do {
          Label16: while (true) {
          if (!(i_486539587 < colontmp__486539586)) break Label16;
            y_989856023 = i_486539587;
            Label17: do {
              var x_989856028 = 0;
              var colontmp__486539582 = 0;
              colontmp__486539582 = self_989855781.drawing.size;
              var i_486539583 = 7;
              Label18: do {
                  Label19: while (true) {
                  if (!(i_486539583 < colontmp__486539582)) break Label19;
                    x_989856028 = i_486539583;
                    if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989856028, y_989856023)) {
                    var fmtRes_989856033 = [mnewString(0)];
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("<rect x=\""));;
                    formatValue_989855900(fmtRes_989856033, 0, (x_989856028 + moSepPx_989855876), makeNimstrLit("<3"));
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("\" y=\""));;
                    formatValue_989855900(fmtRes_989856033, 0, (y_989856023 + moSepPx_989855876), []);
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("\" width=\""));;
                    formatValue_989855900(fmtRes_989856033, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("\" height=\""));;
                    formatValue_989855900(fmtRes_989856033, 0, (1.0 - (moSepPx_989855876 * 2.0)), []);
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("\" rx=\""));;
                    formatValue_989855900(fmtRes_989856033, 0, moRadPx_989855877, []);
                    fmtRes_989856033[0].push.apply(fmtRes_989856033[0], makeNimstrLit("\"></rect>"));;
                    result_989855790.push.apply(result_989855790, fmtRes_989856033[0]);;
                    }
                    
                    i_486539583 = ((i_486539583 + 1) & 0xff);
                  }
              } while (false);
            } while (false);
            i_486539587 = ((i_486539587 + 1) & 0xff);
          }
      } while (false);
    } while (false);
    result_989855790.push.apply(result_989855790, makeNimstrLit("</g>"));;
    }
    else {
      var fmtRes_989856063 = [mnewString(0)];
      fmtRes_989856063[0].push.apply(fmtRes_989856063[0], makeNimstrLit("<path class=\"qrDark\" fill=\""));;
      formatValue_1006633122(fmtRes_989856063, 0, dark_989855783, []);
      fmtRes_989856063[0].push.apply(fmtRes_989856063[0], makeNimstrLit("\" d=\""));;
      result_989855790.push.apply(result_989855790, fmtRes_989856063[0]);;
      if ((0.0 < alRad_989855784)) {
      Label20: do {
        var y_989856070 = 0;
        var colontmp__486539594 = 0;
        colontmp__486539594 = ((self_989855781.drawing.size - 7) & 0xff);
        var i_486539595 = 7;
        Label21: do {
            Label22: while (true) {
            if (!(i_486539595 < colontmp__486539594)) break Label22;
              y_989856070 = i_486539595;
              Label23: do {
                var x_989856075 = 0;
                var colontmp__486539591 = 0;
                colontmp__486539591 = self_989855781.drawing.size;
                var i_486539592 = 0;
                Label24: do {
                    Label25: while (true) {
                    if (!(i_486539592 < colontmp__486539591)) break Label25;
                      x_989856075 = i_486539592;
                      if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989856075, y_989856070)) {
                      var fmtRes_989856080 = [mnewString(0)];
                      fmtRes_989856080[0].push.apply(fmtRes_989856080[0], makeNimstrLit("M"));;
                      formatValue_989855805(fmtRes_989856080, 0, x_989856075, []);
                      fmtRes_989856080[0].push.apply(fmtRes_989856080[0], makeNimstrLit(","));;
                      formatValue_989855805(fmtRes_989856080, 0, y_989856070, []);
                      fmtRes_989856080[0].push.apply(fmtRes_989856080[0], makeNimstrLit("h1v1h-1Z"));;
                      result_989855790.push.apply(result_989855790, fmtRes_989856080[0]);;
                      }
                      
                      i_486539592 = ((i_486539592 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539595 = ((i_486539595 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      Label26: do {
        var y_989856096 = 0;
        var i_486539602 = 0;
        Label27: do {
            Label28: while (true) {
            if (!(i_486539602 < 7)) break Label28;
              y_989856096 = i_486539602;
              Label29: do {
                var x_989856101 = 0;
                var colontmp__486539599 = 0;
                colontmp__486539599 = ((self_989855781.drawing.size - 7) & 0xff);
                var i_486539600 = 7;
                Label30: do {
                    Label31: while (true) {
                    if (!(i_486539600 < colontmp__486539599)) break Label31;
                      x_989856101 = i_486539600;
                      if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989856101, y_989856096)) {
                      var fmtRes_989856106 = [mnewString(0)];
                      fmtRes_989856106[0].push.apply(fmtRes_989856106[0], makeNimstrLit("M"));;
                      formatValue_989855805(fmtRes_989856106, 0, x_989856101, []);
                      fmtRes_989856106[0].push.apply(fmtRes_989856106[0], makeNimstrLit(","));;
                      formatValue_989855805(fmtRes_989856106, 0, y_989856096, []);
                      fmtRes_989856106[0].push.apply(fmtRes_989856106[0], makeNimstrLit("h1v1h-1Z"));;
                      result_989855790.push.apply(result_989855790, fmtRes_989856106[0]);;
                      }
                      
                      i_486539600 = ((i_486539600 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539602 = ((i_486539602 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      Label32: do {
        var y_989856122 = 0;
        var colontmp__486539609 = 0;
        var colontmp__486539610 = 0;
        colontmp__486539609 = ((self_989855781.drawing.size - 7) & 0xff);
        colontmp__486539610 = self_989855781.drawing.size;
        var i_486539611 = colontmp__486539609;
        Label33: do {
            Label34: while (true) {
            if (!(i_486539611 < colontmp__486539610)) break Label34;
              y_989856122 = i_486539611;
              Label35: do {
                var x_989856127 = 0;
                var colontmp__486539606 = 0;
                colontmp__486539606 = self_989855781.drawing.size;
                var i_486539607 = 7;
                Label36: do {
                    Label37: while (true) {
                    if (!(i_486539607 < colontmp__486539606)) break Label37;
                      x_989856127 = i_486539607;
                      if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989856127, y_989856122)) {
                      var fmtRes_989856132 = [mnewString(0)];
                      fmtRes_989856132[0].push.apply(fmtRes_989856132[0], makeNimstrLit("M"));;
                      formatValue_989855805(fmtRes_989856132, 0, x_989856127, []);
                      fmtRes_989856132[0].push.apply(fmtRes_989856132[0], makeNimstrLit(","));;
                      formatValue_989855805(fmtRes_989856132, 0, y_989856122, []);
                      fmtRes_989856132[0].push.apply(fmtRes_989856132[0], makeNimstrLit("h1v1h-1Z"));;
                      result_989855790.push.apply(result_989855790, fmtRes_989856132[0]);;
                      }
                      
                      i_486539607 = ((i_486539607 + 1) & 0xff);
                    }
                } while (false);
              } while (false);
              i_486539611 = ((i_486539611 + 1) & 0xff);
            }
        } while (false);
      } while (false);
      }
      else {
        Label38: do {
          var y_989856148 = 0;
          var colontmp__486539618 = 0;
          colontmp__486539618 = self_989855781.drawing.size;
          var i_486539619 = 0;
          Label39: do {
              Label40: while (true) {
              if (!(i_486539619 < colontmp__486539618)) break Label40;
                y_989856148 = i_486539619;
                Label41: do {
                  var x_989856153 = 0;
                  var colontmp__486539615 = 0;
                  colontmp__486539615 = self_989855781.drawing.size;
                  var i_486539616 = 0;
                  Label42: do {
                      Label43: while (true) {
                      if (!(i_486539616 < colontmp__486539615)) break Label43;
                        x_989856153 = i_486539616;
                        if (HEX5BHEX5D_704643106(self_989855781.drawing, x_989856153, y_989856148)) {
                        var fmtRes_989856158 = [mnewString(0)];
                        fmtRes_989856158[0].push.apply(fmtRes_989856158[0], makeNimstrLit("M"));;
                        formatValue_989855805(fmtRes_989856158, 0, x_989856153, []);
                        fmtRes_989856158[0].push.apply(fmtRes_989856158[0], makeNimstrLit(","));;
                        formatValue_989855805(fmtRes_989856158, 0, y_989856148, []);
                        fmtRes_989856158[0].push.apply(fmtRes_989856158[0], makeNimstrLit("h1v1h-1Z"));;
                        result_989855790.push.apply(result_989855790, fmtRes_989856158[0]);;
                        }
                        
                        i_486539616 = ((i_486539616 + 1) & 0xff);
                      }
                  } while (false);
                } while (false);
                i_486539619 = ((i_486539619 + 1) & 0xff);
              }
          } while (false);
        } while (false);
      }
      
      var fmtRes_989856173 = mnewString(0);
      fmtRes_989856173.push.apply(fmtRes_989856173, makeNimstrLit("\"></path>"));;
      result_989855790.push.apply(result_989855790, fmtRes_989856173);;
    }
    
      if ((0.0 < alRad_989855784)) Temporary44 = true; else {        Temporary44 = forceUseRect_989855789;      }    if (Temporary44) {
    var alRadPx_989856174 = ((3.5 * alRad_989855784) / 100.0);
    result_989855790.push.apply(result_989855790, makeNimstrLit("<g class=\"qrRounded qrAlPatterns\">"));;
    var fmtRes_989856223 = [mnewString(0)];
    fmtRes_989856223[0].push.apply(fmtRes_989856223[0], makeNimstrLit("<g class=\"qrDark\" fill=\""));;
    formatValue_1006633122(fmtRes_989856223, 0, dark_989855783, []);
    fmtRes_989856223[0].push.apply(fmtRes_989856223[0], makeNimstrLit("\">"));;
    result_989855790.push.apply(result_989855790, fmtRes_989856223[0]);;
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(0, 0, 7.0, alRadPx_989856174));;
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(((((self_989855781.drawing.size - 7) & 0xff) + 0) & 0xff), 0, 7.0, alRadPx_989856174));;
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(0, ((((self_989855781.drawing.size - 7) & 0xff) + 0) & 0xff), 7.0, alRadPx_989856174));;
    result_989855790.push.apply(result_989855790, makeNimstrLit("</g>"));;
    var fmtRes_989856233 = [mnewString(0)];
    fmtRes_989856233[0].push.apply(fmtRes_989856233[0], makeNimstrLit("<g class=\"qrLight\" fill=\""));;
    formatValue_1006633122(fmtRes_989856233, 0, light_989855782, []);
    fmtRes_989856233[0].push.apply(fmtRes_989856233[0], makeNimstrLit("\">"));;
    result_989855790.push.apply(result_989855790, fmtRes_989856233[0]);;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary45 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 1.0) <= 0.0)) {
    Temporary45 = 0.5;
    }
    else {
    Temporary45 = (alRadPx_989856174 - 1.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(1, 1, 5.0, Temporary45));;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary46 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 1.0) <= 0.0)) {
    Temporary46 = 0.5;
    }
    else {
    Temporary46 = (alRadPx_989856174 - 1.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(((((self_989855781.drawing.size - 7) & 0xff) + 1) & 0xff), 1, 5.0, Temporary46));;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary47 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 1.0) <= 0.0)) {
    Temporary47 = 0.5;
    }
    else {
    Temporary47 = (alRadPx_989856174 - 1.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(1, ((((self_989855781.drawing.size - 7) & 0xff) + 1) & 0xff), 5.0, Temporary47));;
    result_989855790.push.apply(result_989855790, makeNimstrLit("</g>"));;
    var fmtRes_989856243 = [mnewString(0)];
    fmtRes_989856243[0].push.apply(fmtRes_989856243[0], makeNimstrLit("<g class=\"qrDark\" fill=\""));;
    formatValue_1006633122(fmtRes_989856243, 0, dark_989855783, []);
    fmtRes_989856243[0].push.apply(fmtRes_989856243[0], makeNimstrLit("\">"));;
    result_989855790.push.apply(result_989855790, fmtRes_989856243[0]);;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary48 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 2.0) <= 0.0)) {
    Temporary48 = 0.25;
    }
    else {
    Temporary48 = (alRadPx_989856174 - 2.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(2, 2, 3.0, Temporary48));;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary49 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 2.0) <= 0.0)) {
    Temporary49 = 0.25;
    }
    else {
    Temporary49 = (alRadPx_989856174 - 2.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(((((self_989855781.drawing.size - 7) & 0xff) + 2) & 0xff), 2, 3.0, Temporary49));;
    if ((alRadPx_989856174 == 0.0)) {
    Temporary50 = 0.0;
    }
    else {
    if (((alRadPx_989856174 - 2.0) <= 0.0)) {
    Temporary50 = 0.25;
    }
    else {
    Temporary50 = (alRadPx_989856174 - 2.0);
    }
    }
    result_989855790.push.apply(result_989855790, drawRoundedRect_989856178(2, ((((self_989855781.drawing.size - 7) & 0xff) + 2) & 0xff), 3.0, Temporary50));;
    result_989855790.push.apply(result_989855790, makeNimstrLit("</g>"));;
    result_989855790.push.apply(result_989855790, makeNimstrLit("</g>"));;
    }
    
    result_989855790.push.apply(result_989855790, makeNimstrLit("</svg>"));;

  return result_989855790;

}
/*
Label1: do {
  console.log(newQR_620756998);
  var HEX3Atmp_486539268 = makeNimstrLit("https://github.com/aruZeta/QRgen");
  var HEX3Atmp_486539269 = getMostEfficientMode_788529169(HEX3Atmp_486539268);
  var qr_486539270 = nimCopy(null, newQR_620756998(HEX3Atmp_486539268, 0, HEX3Atmp_486539269, getSmallestVersion_788529195(HEX3Atmp_486539268, HEX3Atmp_486539269, 0)), NTI687865860);
  printTerminal_989855750(qr_486539270);
} while (false);
Label2: do {
  var HEX3Atmp_486539271 = makeNimstrLit("https://github.com/aruZeta/QRgen");
  var HEX3Atmp_486539272 = getMostEfficientMode_788529169(HEX3Atmp_486539271);
  var qr_486539273 = nimCopy(null, newQR_620756998(HEX3Atmp_486539271, 0, HEX3Atmp_486539272, getSmallestVersion_788529195(HEX3Atmp_486539271, HEX3Atmp_486539272, 0)), NTI687865860);
  console.log(toJSStr(printSvg_989855780(qr_486539273, makeNimstrLit("#ffffff"), makeNimstrLit("#000000"), 0, 0, 25, makeNimstrLit("qrCode"), [], false)));
} while (false);
*/

//manually map to generated functions
const getMostEfficientMode = getMostEfficientMode_788529169;
const newQR = newQR_620756998;
const getSmallestVersion = getSmallestVersion_788529195;
const printSvg = printSvg_989855780;

function qrGen(txt,bgHexColor,qrHexColor,alignmentRadius,moduleRadius,moduleSeperation) {
	//check string
	if ((txt) && (txt.length === 0)) {
		console.error('Please supply QR String');
		return;
	}

	//define globals
	bgHexColor = bgHexColor || '#ffffff';
	qrHexColor = qrHexColor || '#000000';
	alignmentRadius = alignmentRadius || 0;
	moduleRadius = moduleRadius || 0;
	moduleSeperation = moduleSeperation || 0;
	
	//init
	const mkstring = makeNimstrLit(txt);
	const efficientMode = getMostEfficientMode(mkstring);
	const qr = nimCopy(null, newQR(mkstring, 0, efficientMode, getSmallestVersion(mkstring, efficientMode, 0)), NTI687865860);
	
	//return SVG
	return toJSStr(printSvg(qr, makeNimstrLit(bgHexColor), makeNimstrLit(qrHexColor), alignmentRadius, moduleRadius, moduleSeperation, makeNimstrLit("qrCode"), [], false));
}

//expose for window/import
window.qrGen = qrGen;
export default qrGen;